[
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "References"
  },
  {
    "objectID": "s4_sensitivity_analyses.html",
    "href": "s4_sensitivity_analyses.html",
    "title": "Sensitivity Analyses",
    "section": "",
    "text": "Purpose: talk about sensitivity analyses with respect to missing data\n\nMMRM is an appropriate choice for the primary analysis in many longitudinal clinical trials under the missing at random (MAR) assumption.\nMMRM can handle missing values. BUT: need of baseline and at least one post-baseline value.\nNo imputation for individual missing values but missing data is implicitly imputed.\nExploit the correlation between outcomes within subjects.\nMAR: future outcomes for subjects who discontinued are assumed be similar to the future outcomes of subjects who continued if they had the same values of past (observed) outcomes, covariates,…\n\n\n\n\nConsider sensivitiy analyses to check model assumptions e.g. assumption of MAR.\nComparing results from sensitivity analyses: how much inference rely on the assumptions.\nHere, inference with regard to the treatment effect. Thus, investigate how treatment effects vary depending on assumptions (about missing data).\nUncertainty from incompleteness cannot be objectively evaluated from observed data so there is a need for missing data sensitivity analyses.\n\n\n\n\n\nFlexibility in modeling treatment effects over time and the within-patient error correlation structure makes MMRM a widely useful analysis.\nMMRM, MI: two major approaches to missing data with good statistical properties. Both rely on MAR assumption (for MI: standard implementation).\nMMRM: missing values implicitly imputed, MI: missing values explicitly imputed.\nMMRM vs. MI: approximately equivalent provided the variables used in the imputation model are the same as those included in the analysis model (level of equivalence will depend on the number of imputations)\nMI: imputation model with at least those variables from the primary model, additional auxiliary variables can be used in the imputation model to improve the accuracy of the missing data prediction.\nHandling missing not at random (MNAR) possible for MI (e.g. reference-based imputation) but not within MMRM.\nMMRM does not work if missing baseline values are present. Missing baseline values can be imputed first. Additionally, at least one post-baseline value has to be observed. Alternative: LDA where baseline is part of the response vector.\n\nNote that, when implemented in similar manners, MI and MMRM have similar assumptions and yield similar results. Thus, MI implemented similarly to MMRM is not a sensitivity analysis!\n\n\n\n\nMissing baseline value of the outcome (and other covariates) is a common situation\nMMRM not efficient or potential biased estimates as subjects with missing covariates are excluded from the analysis\n(Kayembe and Breukelen 2022) compared different methods e.g. unadjusted analysis, complete case, mean imputation, MI: mean imputation seems to be appropriate as long as the covariates are measured before randomization (produces unbiased treatment effect estimates with good coverage, easy to implement)\n\nNow, we consider the situation as in our data sets: baseline observed, no intermittent missing values, drop-outs = monotone missing pattern\n\n\n\nIn general, these simple approaches are not recommended for use. Methods are of historic interest and provide a useful starting point. Here, we consider two simple approaches. We will apply these two methods in the practical part to compare results.\n\n\nFor each subject, LOCF imputes missing values using the last observed value for that subject. Typically, under LOCF the repeated masures nature of the data is ignored and a single outcome for each subject is analyzed.\nLOCF was used in the past, justified as it was thought that it provides conservative estimates. However, conditions under which LOCF yield conservative estimates and maintain control of Type I error rates are not straightforward and cannot be assured at the beginning of the trial. For example, LOCF is likely to overestimate treatment benefit if dop-out in the control gorup is more frequent.\n\n\n\nOther names: observed case/ completers analysis\nReduce the data set selecting only those subjects with observed outcome value(s).\nCompleters analysis may create selection bias, may cause overestimation of within group effects particularly at the last scheduled visit.\n\n\n\n\n\nAssumption of MAR is often reasonable, but possibility of data missing not at random (MNAR) is difficult to rule out.\nThus, analysis under MNAR needed.\nAnalysis under MNAR: these methods are heavily assumption driven and the assumptions are not testable as we do not have the missing data.\nConsider a sensitivity analysis framework allowing assessment of robustness of results to the various assumptions.\nMNAR methods: different possibilities e.g. class of pattern-mixture models. The pattern-mixture model allows missing outcomes to be imputed under a chosen scenario and in this way can be used to complete the data set and apply the primary analysis to this completed data set.\nMI can be used to explore departures from MAR (for analysis under a MNAR assumption). This is referred to as controlled MI and includes delta-based MI and reference-based MI (belong to the class of pattern mixture models). Data is imputed under an alternative MNAR distribution that reflects a relevant scenario for the unobserved data. The imputed data sets are then analysed as with standard MI.\n\n\n\n\nHas received increasing attention in clinical trials as it provides an attractive approach for a sensitivity analysis because missing data assumptions are framed in an intuitive way. The departure from MAR is captured in a qualitative way, making the formulation of the problem intuitive.\nFor example, a plausible MNAR mechanism in a placebo‐controlled trial is to assume that subjects in the experimental arm who dropped out stop taking their treatment and have similar outcomes to those in the placebo arm.\nRemember: MI under MAR assumes that the outcome distribution of patients with missing data is the same as the outcome distribution of patients with complete data, conditional on relevant covariates. However, if most patients withdraw from the study after treatment discontinuation, then this is not plausible, as patients who withdraw from the study treatment are expected to have a worse otucome than patients who stay on study treatment. Thus, addressing missing data under a MAR assumption estimates a hypothetical estimand and not a treatment policy estimand.\nDifferent options to handle missing outcome data for reference-based imputation were described (Carpenter and Kenward 2013): e.g. jump to reference (J2R), copy reference (CR), copy increments in reference (CIR)\n\nJump to reference J2R assumes that after treatment discontinuation, the patient’s mean outcome distribution is that of a reference group, usually the control group. This is a very extreme assumption, as this implies that any efficacy of the drug vanishes immediately after discontinuation - may be plausible for symptomatic treatments.\nCopy reference CR assumes that the patient’s outcome distribution both before and after treatment discontinuation is the same as the distribution of the reference group. This has a milder effect than J2R: If a treatment-group patient has an outcome that is better than the reference group mean before treatment discontinuation, their imputed values after treatment discontinuation will also be better than the reference group mean.\nCopy increments in reference CIR assumes that after treatment discontinuation, the increments are the same as those from the reference group. This is much milder than J2R and CR and implies that benefit gained from the treatment before discontinuation is not lost.\nThe conventional approach to analyse data using these reference based approaches is MI, following the same steps as MI under MAR.\nSoftware, R: e.g. the rbmi package supports reference-based strategies (Gower-Page and Wolbers 2022)\n\n\n\n\nImpute data assuming all unobserved subjects having a poorer or better response than those observed, by adding or subtracting a delta parameter \\(\\delta\\) to the expected value of the e.g. MAR imputed values.\nDelta can be implemented in all treatment groups, or in only one group, or may vary by treatment group or an alternative specified factor.\nChoice of values for the sensitivity parameter \\(\\delta\\): e.g. selection by content experts.\nSteps: 1. missing values are imputed using standard MI procedure e.g. under MAR (but can also be under MNAR e.g. combinded with copy reference approach), 2. imputed values are shifted by adding some fixed value \\(\\delta\\) to reflect the MNAR mechanism, 3. analysis with standard statistical methods including Rubin’s rule to combine results\n\n\n\n\n\n\nTake the (all2) high2 data set\nLook at the MMRM and at the complete case (CC) analysis (refer to section Missing Data for the all2 data set).\nApply additionally LOCF and compare results.\nTry MNAR method reference-based MI with J2R and CIR by using the rbmi package. Compare with the other results.\n\n\n\nHave a short look at the rbmi() package first.\n\nlibrary(rbmi)\n?rbmi\n\nvignette(topic = \"quickstart\", package = \"rbmi\")\n\nstarting httpd help server ... done\n\n\nThe workflow is based on 4 core functions:\n\ndraws() - fits the imputation models, different methods possible, we will use method_bayes() for MI based on Bayesian posterior parameter draws from MCMC sampling\nimpute() - creates multiple imputed data sets\nanalyse() - analyses each of the multiple imputed data sets, default = ancova, other options possible\npool() - combines the results across imputed data sets, for method_bayes (see above) pooling and inference is based on Rubin’s rule\n\nImplemented imputation strategies in rbmi:\n\nMissing at Random (MAR)\nJump to Reference (JR)\nCopy Reference (CR)\nCopy Increments in Reference (CIR)\n\nI will show how it looks like for the all2 data set and you will then explore the methods using the high2 data set.\n\n\n\n\n\nTable: Adjusted means for the complete case data set (all2 data with drop-out, select completer)\n\nmodel_lsmeans_cc\n\n trt avisit emmean   SE df lower.CL upper.CL\n 1   Week 2  -4.33 1.12 34    -6.61    -2.06\n 2   Week 2  -5.47 1.09 34    -7.69    -3.26\n 1   Week 4  -6.98 1.09 34    -9.19    -4.77\n 2   Week 4  -9.12 1.06 34   -11.27    -6.97\n 1   Week 8 -10.17 1.21 34   -12.63    -7.71\n 2   Week 8 -13.10 1.18 34   -15.49   -10.71\n\nConfidence level used: 0.95 \n\n\n\n\n\nTable: Adjusted means for the all2 data set with drop-out analysed with MMRM\n\nmodel_lsmeans_mmrm\n\n trt avisit emmean    SE   df lower.CL upper.CL\n 1   Week 2  -4.10 0.900 47.0    -5.91    -2.29\n 2   Week 2  -5.29 0.899 47.0    -7.10    -3.48\n 1   Week 4  -6.42 0.974 46.5    -8.38    -4.46\n 2   Week 4  -8.52 0.951 44.8   -10.43    -6.60\n 1   Week 8  -9.73 1.142 40.4   -12.03    -7.42\n 2   Week 8 -12.62 1.114 40.1   -14.88   -10.37\n\nConfidence level used: 0.95 \n\n\n\n\n\n\nall2.locf &lt;- all2 %&gt;% filter(!is.na(chgdrop)) %&gt;%\n  dplyr::group_by(subject) %&gt;% \n  dplyr::mutate( drop=max(week) )\n\nall2.locf&lt;-all2.locf %&gt;% dplyr::filter(week==drop)\n\nancova &lt;- aov(change ~ basval + trt, data = all2.locf)\nsummary(ancova)\n\n            Df Sum Sq Mean Sq F value Pr(&gt;F)  \nbasval       1    1.8    1.82   0.053 0.8185  \ntrt          1  114.2  114.20   3.342 0.0739 .\nResiduals   47 1606.1   34.17                 \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nancova$coefficients\n\n(Intercept)      basval        trt2 \n-8.69460273  0.02497994 -3.02800963 \n\n\nTable: Mean values for change from baseline of LOCF analysis\n\n\n\n\n\n\n  \n    \n    \n      Characteristic\n      Arm 1, N = 251\n      Arm 2, N = 251\n    \n  \n  \n    change\n-8.20 (5.50)\n-11.24 (6.06)\n  \n  \n  \n    \n      1 Mean (SD)\n    \n  \n\n\n\n\n\n\n\n\n# Define the names of key variables in the data set\nset_mi&lt;-set_vars(\n  subjid = \"subject\",\n  visit = \"avisit\",\n  outcome = \"chgdrop\",\n  group = \"group\",\n  covariates = c(\"basval * avisit\", \"group * avisit\")\n)\n\nvars_an&lt;-set_mi\nvars_an$covariates &lt;- \"basval\"\n\n# Define the imputation strategy for each subject with at least one missing observation\ndat_ice &lt;- all2 %&gt;% \n  arrange(subject, avisit) %&gt;% \n  filter(is.na(chgdrop)) %&gt;% \n  group_by(subject) %&gt;% \n  slice(1) %&gt;%\n  ungroup() %&gt;% \n  select(subject, avisit) %&gt;% \n  mutate(strategy = \"JR\")\n\n# Define the imputation method\nmethod &lt;- method_bayes(\n  burn_in = 200,\n  burn_between = 5,\n  n_samples = 100,\n  seed = 072407\n)\n\ndraw_all2&lt;-draws(data=all2, data_ice = dat_ice, vars=set_mi, method=method, ncores = 1, quiet = FALSE)\n\nimputeObj &lt;- impute(\n  draw_all2,\n  references = c(\"Arm 1\" = \"Arm 1\", \"Arm 2\" = \"Arm 1\")\n)\n\nimputed_all2 &lt;- extract_imputed_dfs(imputeObj)\n\nanaObj &lt;- analyse(\n  imputeObj,\n  vars = vars_an\n)\n\nTable: Estimates from jump to reference J2R imputation\n\npoolObj &lt;- pool(anaObj)\nas.data.frame(poolObj)\n\n       parameter        est        se        lci        uci         pval\n1     trt_Week 2  -1.189928 1.2864325  -3.780746  1.4008900 3.598958e-01\n2 lsm_ref_Week 2  -4.125036 0.9088264  -5.955372 -2.2947002 4.178855e-05\n3 lsm_alt_Week 2  -5.314964 0.9088264  -7.145300 -3.4846279 5.199440e-07\n4     trt_Week 4  -1.920738 1.3711052  -4.689028  0.8475529 1.687137e-01\n5 lsm_ref_Week 4  -6.404449 0.9777849  -8.379818 -4.4290798 7.521493e-08\n6 lsm_alt_Week 4  -8.325187 0.9654627 -10.274069 -6.3763039 8.265733e-11\n7     trt_Week 8  -2.211225 1.6967275  -5.649685  1.2272346 2.005871e-01\n8 lsm_ref_Week 8  -9.656881 1.2244745 -12.142348 -7.1714149 2.770935e-09\n9 lsm_alt_Week 8 -11.868107 1.1717638 -14.238826 -9.4973871 1.948658e-12\n\n\n\n\n\nUse the additional argument update_strategies in the impute function.\n\ndat_ice_CIR &lt;- dat_ice %&gt;% \n  mutate(strategy = ifelse(strategy == \"JR\", \"CIR\", strategy))\n\nimputeObj_CIR &lt;- impute(\n  draw_all2,\n  references = c(\"Arm 1\" = \"Arm 1\", \"Arm 2\" = \"Arm 1\"),\n  update_strategy = dat_ice_CIR\n)\n\nanaObj_CIR &lt;- analyse(\n  imputeObj_CIR,\n  vars = vars_an\n)\n\nTable: Estimates from copy increments in reference CIR imputation\n\npoolObj_CIR &lt;- pool(anaObj_CIR)\nas.data.frame(poolObj_CIR)\n\n       parameter        est        se        lci        uci         pval\n1     trt_Week 2  -1.189928 1.2864325  -3.780746  1.4008900 3.598958e-01\n2 lsm_ref_Week 2  -4.125036 0.9088264  -5.955372 -2.2947002 4.178855e-05\n3 lsm_alt_Week 2  -5.314964 0.9088264  -7.145300 -3.4846279 5.199440e-07\n4     trt_Week 4  -2.014793 1.3710976  -4.782582  0.7529964 1.492281e-01\n5 lsm_ref_Week 4  -6.389437 0.9827301  -8.375095 -4.4037784 8.988973e-08\n6 lsm_alt_Week 4  -8.404230 0.9687489 -10.359825 -6.4486346 7.096096e-11\n7     trt_Week 8  -2.609022 1.6166710  -5.879658  0.6616141 1.146759e-01\n8 lsm_ref_Week 8  -9.646948 1.1739906 -12.026748 -7.2671472 8.012076e-10\n9 lsm_alt_Week 8 -12.255969 1.1568184 -14.598416 -9.9135228 7.351873e-13\n\n\n\n\n\nTake the figure from the missingness part to better understand what we have found here.\n\nEstimates for all methods\n\n\n\nMean\nDiff\n\n\n\n\nCompleters, Arm 1\n-10.17\n\n\n\nCompleters, Arm 2\n-13.10\n-2.93\n\n\nMMRM, Arm 1\n-9.73\n\n\n\nMMRM, Arm 2\n-12.62\n-2.06\n\n\nLOCF, Arm 1\n-8.20\n\n\n\nLOCF, Arm 2\n-11.24\n-3.03\n\n\nJ2R , Arm 1\n-9.66\n\n\n\nJ2R , Arm 2\n-11.87\n-2.21\n\n\nCIR , Arm 1\n-9.65\n\n\n\nCIR , Arm 2\n-12.26\n-2.61\n\n\n\n\n\n\nNow, you can first of all repeat the analysis on the all2 data set to see if you can manage it. Or you go directly to the next step and apply methods to the high2 data set.\nOne starting point for the high2 data set as the structure is a little bit different:\nFirst, fill in missing visits. This was not necessary in the all2 data set. This can be done with the expand_locf function of the rbmi package. Note, change is the outcome variable and not chgdrop as in all2\n\nhigh2 &lt;- high2 %&gt;% ungroup()\n\nhigh2_expand &lt;- expand_locf(\n  high2,\n  subject = levels(high2$subject),  \n  avisit = levels(high2$avisit),\n  vars = c(\"basval\",\"trt\",\"group\"),\n  group = c(\"subject\"),\n  order = c(\"subject\", \"avisit\")\n)\n\n\n\n\n\nFirst, fill in missing visits. This was not necessary in the all2 data set. Note, change is the outcome variable and not chgdrop as in all2\n\nhigh2 &lt;- high2 %&gt;% ungroup()\n\nhigh2_expand &lt;- expand_locf(\n  high2,\n  subject = levels(high2$subject),  \n  avisit = levels(high2$avisit),\n  vars = c(\"basval\",\"trt\",\"group\"),\n  group = c(\"subject\"),\n  order = c(\"subject\", \"avisit\")\n)\n\n\n\n\nhigh2.cc&lt;- high2 %&gt;% dplyr::filter(drop==8)\n\nfit_cc &lt;- mmrm::mmrm(\n  formula = change ~ basval*avisit + trt*avisit + us(avisit | subject),\n  data = high2.cc,\n  control = mmrm_control(method = \"Kenward-Roger\")\n)\n\nsummary(fit_cc)\n\nmmrm fit\n\nFormula:     change ~ basval * avisit + trt * avisit + us(avisit | subject)\nData:        high2.cc (used 649 observations from 130 subjects with maximum 5 \ntimepoints)\nCovariance:  unstructured (15 variance parameters)\nMethod:      Kenward-Roger\nVcov Method: Kenward-Roger\nInference:   REML\n\nModel selection criteria:\n     AIC      BIC   logLik deviance \n  3693.8   3736.9  -1831.9   3663.8 \n\nCoefficients: \n                     Estimate Std. Error        df t value Pr(&gt;|t|)    \n(Intercept)           3.26341    1.33919 127.00000   2.437   0.0162 *  \nbasval               -0.29475    0.07287 127.00000  -4.045 9.03e-05 ***\navisitWeek 2         -0.11631    1.40264 127.74000  -0.083   0.9340    \navisitWeek 4         -0.77525    1.56814 127.01000  -0.494   0.6219    \navisitWeek 6         -3.27487    1.59347 127.01000  -2.055   0.0419 *  \navisitWeek 8         -3.94403    1.69295 127.01000  -2.330   0.0214 *  \ntrt2                 -0.06433    0.81571 127.00000  -0.079   0.9373    \nbasval:avisitWeek 2  -0.11719    0.07647 128.03000  -1.532   0.1279    \nbasval:avisitWeek 4  -0.18029    0.08533 127.01000  -2.113   0.0366 *  \nbasval:avisitWeek 6  -0.10859    0.08671 127.01000  -1.252   0.2127    \nbasval:avisitWeek 8  -0.06299    0.09212 127.01000  -0.684   0.4954    \navisitWeek 2:trt2    -0.32364    0.85100 127.17000  -0.380   0.7043    \navisitWeek 4:trt2    -1.07631    0.95516 127.01000  -1.127   0.2619    \navisitWeek 6:trt2    -1.35403    0.97059 127.01000  -1.395   0.1654    \navisitWeek 8:trt2    -1.65323    1.03118 127.01000  -1.603   0.1114    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCovariance estimate:\n        Week 1  Week 2  Week 4  Week 6  Week 8\nWeek 1 21.0337 16.0819 13.3827 12.2436 13.2340\nWeek 2 16.0819 34.0261 22.4388 20.5555 20.0298\nWeek 4 13.3827 22.4388 34.9214 27.3814 25.0059\nWeek 6 12.2436 20.5555 27.3814 33.6239 30.2604\nWeek 8 13.2340 20.0298 25.0059 30.2604 39.6554\n\nmodel_lsmeans &lt;- emmeans::emmeans(fit_cc, ~trt*avisit, weights = \"proportional\")\nmodel_lsmeans\n\n trt avisit emmean    SE  df lower.CL upper.CL\n 1   Week 1  -1.91 0.595 127    -3.08   -0.731\n 2   Week 1  -1.97 0.550 127    -3.06   -0.885\n 1   Week 2  -4.08 0.756 126    -5.58   -2.585\n 2   Week 2  -4.47 0.702 127    -5.86   -3.080\n 1   Week 4  -5.85 0.764 127    -7.36   -4.336\n 2   Week 4  -6.99 0.706 127    -8.38   -5.591\n 1   Week 6  -7.09 0.749 127    -8.57   -5.607\n 2   Week 6  -8.51 0.692 127    -9.88   -7.138\n 1   Week 8  -6.96 0.811 127    -8.56   -5.352\n 2   Week 8  -8.67 0.750 127   -10.16   -7.191\n\nConfidence level used: 0.95 \n\n\n\n\n\n\nfit_mmrm &lt;- mmrm::mmrm(\n  formula = change ~ basval*avisit + trt*avisit + us(avisit | subject),\n  data = high2,\n  control = mmrm_control(method = \"Kenward-Roger\")\n)\n\nsummary(fit_mmrm)\n\nmmrm fit\n\nFormula:     change ~ basval * avisit + trt * avisit + us(avisit | subject)\nData:        high2 (used 830 observations from 200 subjects with maximum 5 \ntimepoints)\nCovariance:  unstructured (15 variance parameters)\nMethod:      Kenward-Roger\nVcov Method: Kenward-Roger\nInference:   REML\n\nModel selection criteria:\n     AIC      BIC   logLik deviance \n  4779.1   4828.6  -2374.6   4749.1 \n\nCoefficients: \n                     Estimate Std. Error        df t value Pr(&gt;|t|)    \n(Intercept)           3.33421    1.12651 196.97000   2.960  0.00346 ** \nbasval               -0.27934    0.05962 196.97000  -4.685  5.2e-06 ***\navisitWeek 2         -0.15400    1.17265 181.53000  -0.131  0.89566    \navisitWeek 4         -1.00849    1.35934 172.12000  -0.742  0.45916    \navisitWeek 6         -3.27037    1.53582 166.05000  -2.129  0.03470 *  \navisitWeek 8         -3.93835    1.65523 140.95000  -2.379  0.01868 *  \ntrt2                 -0.04273    0.64969 196.97000  -0.066  0.94763    \nbasval:avisitWeek 2  -0.08292    0.06254 181.91000  -1.326  0.18659    \nbasval:avisitWeek 4  -0.10700    0.07290 173.67000  -1.468  0.14396    \nbasval:avisitWeek 6  -0.01321    0.08198 165.55000  -0.161  0.87216    \nbasval:avisitWeek 8   0.01778    0.08902 143.32000   0.200  0.84197    \navisitWeek 2:trt2    -0.61015    0.69414 181.41000  -0.879  0.38057    \navisitWeek 4:trt2    -1.41851    0.81728 175.52000  -1.736  0.08438 .  \navisitWeek 6:trt2    -2.31835    0.91503 165.19000  -2.534  0.01222 *  \navisitWeek 8:trt2    -2.47738    0.99465 143.57000  -2.491  0.01389 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCovariance estimate:\n        Week 1  Week 2  Week 4  Week 6  Week 8\nWeek 1 20.9961 17.1332 15.4142 15.3503 15.8717\nWeek 2 17.1332 35.2157 25.8380 25.5499 24.3926\nWeek 4 15.4142 25.8380 38.8771 33.0523 30.1128\nWeek 6 15.3503 25.5499 33.0523 43.7638 39.3236\nWeek 8 15.8717 24.3926 30.1128 39.3236 47.7371\n\nmodel_lsmeans &lt;- emmeans::emmeans(fit_mmrm, ~trt*avisit, weights = \"proportional\")\nmodel_lsmeans\n\n trt avisit emmean    SE  df lower.CL upper.CL\n 1   Week 1  -1.61 0.458 197    -2.52   -0.711\n 2   Week 1  -1.66 0.459 197    -2.56   -0.752\n 1   Week 2  -3.24 0.609 191    -4.44   -2.036\n 2   Week 2  -3.89 0.613 193    -5.10   -2.681\n 1   Week 4  -4.52 0.656 182    -5.81   -3.223\n 2   Week 4  -5.98 0.656 182    -7.27   -4.684\n 1   Week 6  -5.12 0.718 168    -6.53   -3.701\n 2   Week 6  -7.48 0.715 166    -8.89   -6.067\n 1   Week 8  -5.24 0.785 149    -6.79   -3.686\n 2   Week 8  -7.76 0.762 139    -9.26   -6.251\n\nConfidence level used: 0.95 \n\n\n\n\n\n\nhigh2.locf&lt;-high2 %&gt;% dplyr::filter(week==drop)\n\nancova &lt;- aov(change ~ basval + trt, data = high2.locf)\nsummary(ancova)\n\n             Df Sum Sq Mean Sq F value  Pr(&gt;F)   \nbasval        1    483   483.3   9.709 0.00211 **\ntrt           1    241   241.4   4.851 0.02880 * \nResiduals   197   9805    49.8                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nancova$coefficients\n\n(Intercept)      basval        trt2 \n  0.3536399  -0.2648315  -2.2086854 \n\nhigh2.locf %&gt;% ungroup() %&gt;%\n  select(change, group) %&gt;%\n  tbl_summary(by = group,\n              statistic = list(\n                all_continuous() ~ \"{mean} ({sd})\"), \n              digits = all_continuous() ~ 2 )\n\n\n\n\n\n  \n    \n    \n      Characteristic\n      Arm 1, N = 1001\n      Arm 2, N = 1001\n    \n  \n  \n    change\n-4.22 (6.38)\n-6.72 (7.90)\n  \n  \n  \n    \n      1 Mean (SD)\n    \n  \n\n\n\n\n\n\n\n\nset_mi&lt;-set_vars(\n  subjid = \"subject\",\n  visit = \"avisit\",\n  outcome = \"change\",\n  group = \"group\",\n  covariates = c(\"basval * avisit\", \"group * avisit\")\n)\n\nvars_an&lt;-set_mi\nvars_an$covariates &lt;- \"basval\"\n\ndat_ice &lt;- high2_expand %&gt;% \n  arrange(subject, avisit) %&gt;% \n  filter(is.na(change)) %&gt;% \n  group_by(subject) %&gt;% \n  slice(1) %&gt;%\n  ungroup() %&gt;% \n  select(subject, avisit) %&gt;% \n  mutate(strategy = \"JR\")\n\nmethod &lt;- method_bayes(\n  burn_in = 200,\n  burn_between = 5,\n  n_samples = 100,\n  seed = 072407\n)\n\ndraw_high2&lt;-draws(data=high2_expand, data_ice = dat_ice, vars=set_mi, method=method, ncores = 1, quiet = FALSE)\n\nimputeObj &lt;- impute(\n  draw_high2,\n  references = c(\"Arm 1\" = \"Arm 1\", \"Arm 2\" = \"Arm 1\")\n)\n\nimputed_high2 &lt;- extract_imputed_dfs(imputeObj)\n\nanaObj &lt;- analyse(\n  imputeObj,\n  vars = vars_an\n)\n\nTable: Estimates from copy jump to reference J2R imputation\n\npoolObj &lt;- pool(anaObj)\nas.data.frame(poolObj)\n\n        parameter         est        se       lci        uci         pval\n1      trt_Week 1 -0.04272539 0.6513099 -1.327240  1.2417894 9.477641e-01\n2  lsm_ref_Week 1 -1.64363730 0.4593710 -2.549610 -0.7376649 4.367614e-04\n3  lsm_alt_Week 1 -1.68636270 0.4593710 -2.592335 -0.7803903 3.118171e-04\n4      trt_Week 2 -0.56805913 0.8694895 -2.283587  1.1474688 5.143679e-01\n5  lsm_ref_Week 2 -3.29966757 0.6139776 -4.511086 -2.0882493 2.330387e-07\n6  lsm_alt_Week 2 -3.86772670 0.6154448 -5.082087 -2.6533665 2.383863e-09\n7      trt_Week 4 -1.23794505 0.9341607 -3.081702  0.6058116 1.868456e-01\n8  lsm_ref_Week 4 -4.56691815 0.6705840 -5.890893 -3.2429436 1.703692e-10\n9  lsm_alt_Week 4 -5.80486320 0.6575761 -7.102678 -4.5070482 1.090291e-15\n10     trt_Week 6 -1.69994606 1.0170780 -3.707618  0.3077255 9.647476e-02\n11 lsm_ref_Week 6 -5.21952895 0.7327090 -6.666472 -3.7725863 3.306987e-11\n12 lsm_alt_Week 6 -6.91947501 0.7414260 -8.383999 -5.4549508 9.864655e-17\n13     trt_Week 8 -1.72945373 1.1031354 -3.908286  0.4493783 1.189418e-01\n14 lsm_ref_Week 8 -5.31618579 0.8094870 -6.916486 -3.7158856 9.139985e-10\n15 lsm_alt_Week 8 -7.04563951 0.8266465 -8.680733 -5.4105457 2.995529e-14\n\n\n\n\n\nTake the figure from the visualization part from day 1 to better understand what we have found here.\n\nEstimates for all methods\n\n\n\nMean\nDiff\n\n\n\n\nCompleters, Arm 1\n-6.96\n\n\n\nCompleters, Arm 2\n-8.67\n-1.71\n\n\nMMRM, Arm 1\n-5.24\n\n\n\nMMRM, Arm 2\n-7.76\n-2.52\n\n\nLOCF, Arm 1\n-4.22\n\n\n\nLOCF, Arm 2\n-6.72\n-2.50\n\n\nJ2R , Arm 1\n-5.32\n\n\n\nJ2R , Arm 2\n-7.06\n-1.74"
  },
  {
    "objectID": "s4_sensitivity_analyses.html#purpose-of-sensitivity-analyses",
    "href": "s4_sensitivity_analyses.html#purpose-of-sensitivity-analyses",
    "title": "Sensitivity Analyses",
    "section": "",
    "text": "Consider sensivitiy analyses to check model assumptions e.g. assumption of MAR.\nComparing results from sensitivity analyses: how much inference rely on the assumptions.\nHere, inference with regard to the treatment effect. Thus, investigate how treatment effects vary depending on assumptions (about missing data).\nUncertainty from incompleteness cannot be objectively evaluated from observed data so there is a need for missing data sensitivity analyses."
  },
  {
    "objectID": "s4_sensitivity_analyses.html#mmrm-vs.-mi",
    "href": "s4_sensitivity_analyses.html#mmrm-vs.-mi",
    "title": "Sensitivity Analyses",
    "section": "",
    "text": "Flexibility in modeling treatment effects over time and the within-patient error correlation structure makes MMRM a widely useful analysis.\nMMRM, MI: two major approaches to missing data with good statistical properties. Both rely on MAR assumption (for MI: standard implementation).\nMMRM: missing values implicitly imputed, MI: missing values explicitly imputed.\nMMRM vs. MI: approximately equivalent provided the variables used in the imputation model are the same as those included in the analysis model (level of equivalence will depend on the number of imputations)\nMI: imputation model with at least those variables from the primary model, additional auxiliary variables can be used in the imputation model to improve the accuracy of the missing data prediction.\nHandling missing not at random (MNAR) possible for MI (e.g. reference-based imputation) but not within MMRM.\nMMRM does not work if missing baseline values are present. Missing baseline values can be imputed first. Additionally, at least one post-baseline value has to be observed. Alternative: LDA where baseline is part of the response vector.\n\nNote that, when implemented in similar manners, MI and MMRM have similar assumptions and yield similar results. Thus, MI implemented similarly to MMRM is not a sensitivity analysis!"
  },
  {
    "objectID": "s4_sensitivity_analyses.html#missing-covariates-baseline-data-only",
    "href": "s4_sensitivity_analyses.html#missing-covariates-baseline-data-only",
    "title": "Sensitivity Analyses",
    "section": "",
    "text": "Missing baseline value of the outcome (and other covariates) is a common situation\nMMRM not efficient or potential biased estimates as subjects with missing covariates are excluded from the analysis\n(Kayembe and Breukelen 2022) compared different methods e.g. unadjusted analysis, complete case, mean imputation, MI: mean imputation seems to be appropriate as long as the covariates are measured before randomization (produces unbiased treatment effect estimates with good coverage, easy to implement)\n\nNow, we consider the situation as in our data sets: baseline observed, no intermittent missing values, drop-outs = monotone missing pattern"
  },
  {
    "objectID": "s4_sensitivity_analyses.html#sensitivity-analyses---simple-approaches",
    "href": "s4_sensitivity_analyses.html#sensitivity-analyses---simple-approaches",
    "title": "Sensitivity Analyses",
    "section": "",
    "text": "In general, these simple approaches are not recommended for use. Methods are of historic interest and provide a useful starting point. Here, we consider two simple approaches. We will apply these two methods in the practical part to compare results.\n\n\nFor each subject, LOCF imputes missing values using the last observed value for that subject. Typically, under LOCF the repeated masures nature of the data is ignored and a single outcome for each subject is analyzed.\nLOCF was used in the past, justified as it was thought that it provides conservative estimates. However, conditions under which LOCF yield conservative estimates and maintain control of Type I error rates are not straightforward and cannot be assured at the beginning of the trial. For example, LOCF is likely to overestimate treatment benefit if dop-out in the control gorup is more frequent.\n\n\n\nOther names: observed case/ completers analysis\nReduce the data set selecting only those subjects with observed outcome value(s).\nCompleters analysis may create selection bias, may cause overestimation of within group effects particularly at the last scheduled visit."
  },
  {
    "objectID": "s4_sensitivity_analyses.html#sensitivity-analyses---handling-nonignorable-missingness-mnar",
    "href": "s4_sensitivity_analyses.html#sensitivity-analyses---handling-nonignorable-missingness-mnar",
    "title": "Sensitivity Analyses",
    "section": "",
    "text": "Assumption of MAR is often reasonable, but possibility of data missing not at random (MNAR) is difficult to rule out.\nThus, analysis under MNAR needed.\nAnalysis under MNAR: these methods are heavily assumption driven and the assumptions are not testable as we do not have the missing data.\nConsider a sensitivity analysis framework allowing assessment of robustness of results to the various assumptions.\nMNAR methods: different possibilities e.g. class of pattern-mixture models. The pattern-mixture model allows missing outcomes to be imputed under a chosen scenario and in this way can be used to complete the data set and apply the primary analysis to this completed data set.\nMI can be used to explore departures from MAR (for analysis under a MNAR assumption). This is referred to as controlled MI and includes delta-based MI and reference-based MI (belong to the class of pattern mixture models). Data is imputed under an alternative MNAR distribution that reflects a relevant scenario for the unobserved data. The imputed data sets are then analysed as with standard MI.\n\n\n\n\nHas received increasing attention in clinical trials as it provides an attractive approach for a sensitivity analysis because missing data assumptions are framed in an intuitive way. The departure from MAR is captured in a qualitative way, making the formulation of the problem intuitive.\nFor example, a plausible MNAR mechanism in a placebo‐controlled trial is to assume that subjects in the experimental arm who dropped out stop taking their treatment and have similar outcomes to those in the placebo arm.\nRemember: MI under MAR assumes that the outcome distribution of patients with missing data is the same as the outcome distribution of patients with complete data, conditional on relevant covariates. However, if most patients withdraw from the study after treatment discontinuation, then this is not plausible, as patients who withdraw from the study treatment are expected to have a worse otucome than patients who stay on study treatment. Thus, addressing missing data under a MAR assumption estimates a hypothetical estimand and not a treatment policy estimand.\nDifferent options to handle missing outcome data for reference-based imputation were described (Carpenter and Kenward 2013): e.g. jump to reference (J2R), copy reference (CR), copy increments in reference (CIR)\n\nJump to reference J2R assumes that after treatment discontinuation, the patient’s mean outcome distribution is that of a reference group, usually the control group. This is a very extreme assumption, as this implies that any efficacy of the drug vanishes immediately after discontinuation - may be plausible for symptomatic treatments.\nCopy reference CR assumes that the patient’s outcome distribution both before and after treatment discontinuation is the same as the distribution of the reference group. This has a milder effect than J2R: If a treatment-group patient has an outcome that is better than the reference group mean before treatment discontinuation, their imputed values after treatment discontinuation will also be better than the reference group mean.\nCopy increments in reference CIR assumes that after treatment discontinuation, the increments are the same as those from the reference group. This is much milder than J2R and CR and implies that benefit gained from the treatment before discontinuation is not lost.\nThe conventional approach to analyse data using these reference based approaches is MI, following the same steps as MI under MAR.\nSoftware, R: e.g. the rbmi package supports reference-based strategies (Gower-Page and Wolbers 2022)\n\n\n\n\nImpute data assuming all unobserved subjects having a poorer or better response than those observed, by adding or subtracting a delta parameter \\(\\delta\\) to the expected value of the e.g. MAR imputed values.\nDelta can be implemented in all treatment groups, or in only one group, or may vary by treatment group or an alternative specified factor.\nChoice of values for the sensitivity parameter \\(\\delta\\): e.g. selection by content experts.\nSteps: 1. missing values are imputed using standard MI procedure e.g. under MAR (but can also be under MNAR e.g. combinded with copy reference approach), 2. imputed values are shifted by adding some fixed value \\(\\delta\\) to reflect the MNAR mechanism, 3. analysis with standard statistical methods including Rubin’s rule to combine results"
  },
  {
    "objectID": "s4_sensitivity_analyses.html#practical-part",
    "href": "s4_sensitivity_analyses.html#practical-part",
    "title": "Sensitivity Analyses",
    "section": "",
    "text": "Take the (all2) high2 data set\nLook at the MMRM and at the complete case (CC) analysis (refer to section Missing Data for the all2 data set).\nApply additionally LOCF and compare results.\nTry MNAR method reference-based MI with J2R and CIR by using the rbmi package. Compare with the other results.\n\n\n\nHave a short look at the rbmi() package first.\n\nlibrary(rbmi)\n?rbmi\n\nvignette(topic = \"quickstart\", package = \"rbmi\")\n\nstarting httpd help server ... done\n\n\nThe workflow is based on 4 core functions:\n\ndraws() - fits the imputation models, different methods possible, we will use method_bayes() for MI based on Bayesian posterior parameter draws from MCMC sampling\nimpute() - creates multiple imputed data sets\nanalyse() - analyses each of the multiple imputed data sets, default = ancova, other options possible\npool() - combines the results across imputed data sets, for method_bayes (see above) pooling and inference is based on Rubin’s rule\n\nImplemented imputation strategies in rbmi:\n\nMissing at Random (MAR)\nJump to Reference (JR)\nCopy Reference (CR)\nCopy Increments in Reference (CIR)\n\nI will show how it looks like for the all2 data set and you will then explore the methods using the high2 data set.\n\n\n\n\n\nTable: Adjusted means for the complete case data set (all2 data with drop-out, select completer)\n\nmodel_lsmeans_cc\n\n trt avisit emmean   SE df lower.CL upper.CL\n 1   Week 2  -4.33 1.12 34    -6.61    -2.06\n 2   Week 2  -5.47 1.09 34    -7.69    -3.26\n 1   Week 4  -6.98 1.09 34    -9.19    -4.77\n 2   Week 4  -9.12 1.06 34   -11.27    -6.97\n 1   Week 8 -10.17 1.21 34   -12.63    -7.71\n 2   Week 8 -13.10 1.18 34   -15.49   -10.71\n\nConfidence level used: 0.95 \n\n\n\n\n\nTable: Adjusted means for the all2 data set with drop-out analysed with MMRM\n\nmodel_lsmeans_mmrm\n\n trt avisit emmean    SE   df lower.CL upper.CL\n 1   Week 2  -4.10 0.900 47.0    -5.91    -2.29\n 2   Week 2  -5.29 0.899 47.0    -7.10    -3.48\n 1   Week 4  -6.42 0.974 46.5    -8.38    -4.46\n 2   Week 4  -8.52 0.951 44.8   -10.43    -6.60\n 1   Week 8  -9.73 1.142 40.4   -12.03    -7.42\n 2   Week 8 -12.62 1.114 40.1   -14.88   -10.37\n\nConfidence level used: 0.95 \n\n\n\n\n\n\nall2.locf &lt;- all2 %&gt;% filter(!is.na(chgdrop)) %&gt;%\n  dplyr::group_by(subject) %&gt;% \n  dplyr::mutate( drop=max(week) )\n\nall2.locf&lt;-all2.locf %&gt;% dplyr::filter(week==drop)\n\nancova &lt;- aov(change ~ basval + trt, data = all2.locf)\nsummary(ancova)\n\n            Df Sum Sq Mean Sq F value Pr(&gt;F)  \nbasval       1    1.8    1.82   0.053 0.8185  \ntrt          1  114.2  114.20   3.342 0.0739 .\nResiduals   47 1606.1   34.17                 \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nancova$coefficients\n\n(Intercept)      basval        trt2 \n-8.69460273  0.02497994 -3.02800963 \n\n\nTable: Mean values for change from baseline of LOCF analysis\n\n\n\n\n\n\n  \n    \n    \n      Characteristic\n      Arm 1, N = 251\n      Arm 2, N = 251\n    \n  \n  \n    change\n-8.20 (5.50)\n-11.24 (6.06)\n  \n  \n  \n    \n      1 Mean (SD)\n    \n  \n\n\n\n\n\n\n\n\n# Define the names of key variables in the data set\nset_mi&lt;-set_vars(\n  subjid = \"subject\",\n  visit = \"avisit\",\n  outcome = \"chgdrop\",\n  group = \"group\",\n  covariates = c(\"basval * avisit\", \"group * avisit\")\n)\n\nvars_an&lt;-set_mi\nvars_an$covariates &lt;- \"basval\"\n\n# Define the imputation strategy for each subject with at least one missing observation\ndat_ice &lt;- all2 %&gt;% \n  arrange(subject, avisit) %&gt;% \n  filter(is.na(chgdrop)) %&gt;% \n  group_by(subject) %&gt;% \n  slice(1) %&gt;%\n  ungroup() %&gt;% \n  select(subject, avisit) %&gt;% \n  mutate(strategy = \"JR\")\n\n# Define the imputation method\nmethod &lt;- method_bayes(\n  burn_in = 200,\n  burn_between = 5,\n  n_samples = 100,\n  seed = 072407\n)\n\ndraw_all2&lt;-draws(data=all2, data_ice = dat_ice, vars=set_mi, method=method, ncores = 1, quiet = FALSE)\n\nimputeObj &lt;- impute(\n  draw_all2,\n  references = c(\"Arm 1\" = \"Arm 1\", \"Arm 2\" = \"Arm 1\")\n)\n\nimputed_all2 &lt;- extract_imputed_dfs(imputeObj)\n\nanaObj &lt;- analyse(\n  imputeObj,\n  vars = vars_an\n)\n\nTable: Estimates from jump to reference J2R imputation\n\npoolObj &lt;- pool(anaObj)\nas.data.frame(poolObj)\n\n       parameter        est        se        lci        uci         pval\n1     trt_Week 2  -1.189928 1.2864325  -3.780746  1.4008900 3.598958e-01\n2 lsm_ref_Week 2  -4.125036 0.9088264  -5.955372 -2.2947002 4.178855e-05\n3 lsm_alt_Week 2  -5.314964 0.9088264  -7.145300 -3.4846279 5.199440e-07\n4     trt_Week 4  -1.920738 1.3711052  -4.689028  0.8475529 1.687137e-01\n5 lsm_ref_Week 4  -6.404449 0.9777849  -8.379818 -4.4290798 7.521493e-08\n6 lsm_alt_Week 4  -8.325187 0.9654627 -10.274069 -6.3763039 8.265733e-11\n7     trt_Week 8  -2.211225 1.6967275  -5.649685  1.2272346 2.005871e-01\n8 lsm_ref_Week 8  -9.656881 1.2244745 -12.142348 -7.1714149 2.770935e-09\n9 lsm_alt_Week 8 -11.868107 1.1717638 -14.238826 -9.4973871 1.948658e-12\n\n\n\n\n\nUse the additional argument update_strategies in the impute function.\n\ndat_ice_CIR &lt;- dat_ice %&gt;% \n  mutate(strategy = ifelse(strategy == \"JR\", \"CIR\", strategy))\n\nimputeObj_CIR &lt;- impute(\n  draw_all2,\n  references = c(\"Arm 1\" = \"Arm 1\", \"Arm 2\" = \"Arm 1\"),\n  update_strategy = dat_ice_CIR\n)\n\nanaObj_CIR &lt;- analyse(\n  imputeObj_CIR,\n  vars = vars_an\n)\n\nTable: Estimates from copy increments in reference CIR imputation\n\npoolObj_CIR &lt;- pool(anaObj_CIR)\nas.data.frame(poolObj_CIR)\n\n       parameter        est        se        lci        uci         pval\n1     trt_Week 2  -1.189928 1.2864325  -3.780746  1.4008900 3.598958e-01\n2 lsm_ref_Week 2  -4.125036 0.9088264  -5.955372 -2.2947002 4.178855e-05\n3 lsm_alt_Week 2  -5.314964 0.9088264  -7.145300 -3.4846279 5.199440e-07\n4     trt_Week 4  -2.014793 1.3710976  -4.782582  0.7529964 1.492281e-01\n5 lsm_ref_Week 4  -6.389437 0.9827301  -8.375095 -4.4037784 8.988973e-08\n6 lsm_alt_Week 4  -8.404230 0.9687489 -10.359825 -6.4486346 7.096096e-11\n7     trt_Week 8  -2.609022 1.6166710  -5.879658  0.6616141 1.146759e-01\n8 lsm_ref_Week 8  -9.646948 1.1739906 -12.026748 -7.2671472 8.012076e-10\n9 lsm_alt_Week 8 -12.255969 1.1568184 -14.598416 -9.9135228 7.351873e-13\n\n\n\n\n\nTake the figure from the missingness part to better understand what we have found here.\n\nEstimates for all methods\n\n\n\nMean\nDiff\n\n\n\n\nCompleters, Arm 1\n-10.17\n\n\n\nCompleters, Arm 2\n-13.10\n-2.93\n\n\nMMRM, Arm 1\n-9.73\n\n\n\nMMRM, Arm 2\n-12.62\n-2.06\n\n\nLOCF, Arm 1\n-8.20\n\n\n\nLOCF, Arm 2\n-11.24\n-3.03\n\n\nJ2R , Arm 1\n-9.66\n\n\n\nJ2R , Arm 2\n-11.87\n-2.21\n\n\nCIR , Arm 1\n-9.65\n\n\n\nCIR , Arm 2\n-12.26\n-2.61\n\n\n\n\n\n\nNow, you can first of all repeat the analysis on the all2 data set to see if you can manage it. Or you go directly to the next step and apply methods to the high2 data set.\nOne starting point for the high2 data set as the structure is a little bit different:\nFirst, fill in missing visits. This was not necessary in the all2 data set. This can be done with the expand_locf function of the rbmi package. Note, change is the outcome variable and not chgdrop as in all2\n\nhigh2 &lt;- high2 %&gt;% ungroup()\n\nhigh2_expand &lt;- expand_locf(\n  high2,\n  subject = levels(high2$subject),  \n  avisit = levels(high2$avisit),\n  vars = c(\"basval\",\"trt\",\"group\"),\n  group = c(\"subject\"),\n  order = c(\"subject\", \"avisit\")\n)\n\n\n\n\n\nFirst, fill in missing visits. This was not necessary in the all2 data set. Note, change is the outcome variable and not chgdrop as in all2\n\nhigh2 &lt;- high2 %&gt;% ungroup()\n\nhigh2_expand &lt;- expand_locf(\n  high2,\n  subject = levels(high2$subject),  \n  avisit = levels(high2$avisit),\n  vars = c(\"basval\",\"trt\",\"group\"),\n  group = c(\"subject\"),\n  order = c(\"subject\", \"avisit\")\n)\n\n\n\n\nhigh2.cc&lt;- high2 %&gt;% dplyr::filter(drop==8)\n\nfit_cc &lt;- mmrm::mmrm(\n  formula = change ~ basval*avisit + trt*avisit + us(avisit | subject),\n  data = high2.cc,\n  control = mmrm_control(method = \"Kenward-Roger\")\n)\n\nsummary(fit_cc)\n\nmmrm fit\n\nFormula:     change ~ basval * avisit + trt * avisit + us(avisit | subject)\nData:        high2.cc (used 649 observations from 130 subjects with maximum 5 \ntimepoints)\nCovariance:  unstructured (15 variance parameters)\nMethod:      Kenward-Roger\nVcov Method: Kenward-Roger\nInference:   REML\n\nModel selection criteria:\n     AIC      BIC   logLik deviance \n  3693.8   3736.9  -1831.9   3663.8 \n\nCoefficients: \n                     Estimate Std. Error        df t value Pr(&gt;|t|)    \n(Intercept)           3.26341    1.33919 127.00000   2.437   0.0162 *  \nbasval               -0.29475    0.07287 127.00000  -4.045 9.03e-05 ***\navisitWeek 2         -0.11631    1.40264 127.74000  -0.083   0.9340    \navisitWeek 4         -0.77525    1.56814 127.01000  -0.494   0.6219    \navisitWeek 6         -3.27487    1.59347 127.01000  -2.055   0.0419 *  \navisitWeek 8         -3.94403    1.69295 127.01000  -2.330   0.0214 *  \ntrt2                 -0.06433    0.81571 127.00000  -0.079   0.9373    \nbasval:avisitWeek 2  -0.11719    0.07647 128.03000  -1.532   0.1279    \nbasval:avisitWeek 4  -0.18029    0.08533 127.01000  -2.113   0.0366 *  \nbasval:avisitWeek 6  -0.10859    0.08671 127.01000  -1.252   0.2127    \nbasval:avisitWeek 8  -0.06299    0.09212 127.01000  -0.684   0.4954    \navisitWeek 2:trt2    -0.32364    0.85100 127.17000  -0.380   0.7043    \navisitWeek 4:trt2    -1.07631    0.95516 127.01000  -1.127   0.2619    \navisitWeek 6:trt2    -1.35403    0.97059 127.01000  -1.395   0.1654    \navisitWeek 8:trt2    -1.65323    1.03118 127.01000  -1.603   0.1114    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCovariance estimate:\n        Week 1  Week 2  Week 4  Week 6  Week 8\nWeek 1 21.0337 16.0819 13.3827 12.2436 13.2340\nWeek 2 16.0819 34.0261 22.4388 20.5555 20.0298\nWeek 4 13.3827 22.4388 34.9214 27.3814 25.0059\nWeek 6 12.2436 20.5555 27.3814 33.6239 30.2604\nWeek 8 13.2340 20.0298 25.0059 30.2604 39.6554\n\nmodel_lsmeans &lt;- emmeans::emmeans(fit_cc, ~trt*avisit, weights = \"proportional\")\nmodel_lsmeans\n\n trt avisit emmean    SE  df lower.CL upper.CL\n 1   Week 1  -1.91 0.595 127    -3.08   -0.731\n 2   Week 1  -1.97 0.550 127    -3.06   -0.885\n 1   Week 2  -4.08 0.756 126    -5.58   -2.585\n 2   Week 2  -4.47 0.702 127    -5.86   -3.080\n 1   Week 4  -5.85 0.764 127    -7.36   -4.336\n 2   Week 4  -6.99 0.706 127    -8.38   -5.591\n 1   Week 6  -7.09 0.749 127    -8.57   -5.607\n 2   Week 6  -8.51 0.692 127    -9.88   -7.138\n 1   Week 8  -6.96 0.811 127    -8.56   -5.352\n 2   Week 8  -8.67 0.750 127   -10.16   -7.191\n\nConfidence level used: 0.95 \n\n\n\n\n\n\nfit_mmrm &lt;- mmrm::mmrm(\n  formula = change ~ basval*avisit + trt*avisit + us(avisit | subject),\n  data = high2,\n  control = mmrm_control(method = \"Kenward-Roger\")\n)\n\nsummary(fit_mmrm)\n\nmmrm fit\n\nFormula:     change ~ basval * avisit + trt * avisit + us(avisit | subject)\nData:        high2 (used 830 observations from 200 subjects with maximum 5 \ntimepoints)\nCovariance:  unstructured (15 variance parameters)\nMethod:      Kenward-Roger\nVcov Method: Kenward-Roger\nInference:   REML\n\nModel selection criteria:\n     AIC      BIC   logLik deviance \n  4779.1   4828.6  -2374.6   4749.1 \n\nCoefficients: \n                     Estimate Std. Error        df t value Pr(&gt;|t|)    \n(Intercept)           3.33421    1.12651 196.97000   2.960  0.00346 ** \nbasval               -0.27934    0.05962 196.97000  -4.685  5.2e-06 ***\navisitWeek 2         -0.15400    1.17265 181.53000  -0.131  0.89566    \navisitWeek 4         -1.00849    1.35934 172.12000  -0.742  0.45916    \navisitWeek 6         -3.27037    1.53582 166.05000  -2.129  0.03470 *  \navisitWeek 8         -3.93835    1.65523 140.95000  -2.379  0.01868 *  \ntrt2                 -0.04273    0.64969 196.97000  -0.066  0.94763    \nbasval:avisitWeek 2  -0.08292    0.06254 181.91000  -1.326  0.18659    \nbasval:avisitWeek 4  -0.10700    0.07290 173.67000  -1.468  0.14396    \nbasval:avisitWeek 6  -0.01321    0.08198 165.55000  -0.161  0.87216    \nbasval:avisitWeek 8   0.01778    0.08902 143.32000   0.200  0.84197    \navisitWeek 2:trt2    -0.61015    0.69414 181.41000  -0.879  0.38057    \navisitWeek 4:trt2    -1.41851    0.81728 175.52000  -1.736  0.08438 .  \navisitWeek 6:trt2    -2.31835    0.91503 165.19000  -2.534  0.01222 *  \navisitWeek 8:trt2    -2.47738    0.99465 143.57000  -2.491  0.01389 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCovariance estimate:\n        Week 1  Week 2  Week 4  Week 6  Week 8\nWeek 1 20.9961 17.1332 15.4142 15.3503 15.8717\nWeek 2 17.1332 35.2157 25.8380 25.5499 24.3926\nWeek 4 15.4142 25.8380 38.8771 33.0523 30.1128\nWeek 6 15.3503 25.5499 33.0523 43.7638 39.3236\nWeek 8 15.8717 24.3926 30.1128 39.3236 47.7371\n\nmodel_lsmeans &lt;- emmeans::emmeans(fit_mmrm, ~trt*avisit, weights = \"proportional\")\nmodel_lsmeans\n\n trt avisit emmean    SE  df lower.CL upper.CL\n 1   Week 1  -1.61 0.458 197    -2.52   -0.711\n 2   Week 1  -1.66 0.459 197    -2.56   -0.752\n 1   Week 2  -3.24 0.609 191    -4.44   -2.036\n 2   Week 2  -3.89 0.613 193    -5.10   -2.681\n 1   Week 4  -4.52 0.656 182    -5.81   -3.223\n 2   Week 4  -5.98 0.656 182    -7.27   -4.684\n 1   Week 6  -5.12 0.718 168    -6.53   -3.701\n 2   Week 6  -7.48 0.715 166    -8.89   -6.067\n 1   Week 8  -5.24 0.785 149    -6.79   -3.686\n 2   Week 8  -7.76 0.762 139    -9.26   -6.251\n\nConfidence level used: 0.95 \n\n\n\n\n\n\nhigh2.locf&lt;-high2 %&gt;% dplyr::filter(week==drop)\n\nancova &lt;- aov(change ~ basval + trt, data = high2.locf)\nsummary(ancova)\n\n             Df Sum Sq Mean Sq F value  Pr(&gt;F)   \nbasval        1    483   483.3   9.709 0.00211 **\ntrt           1    241   241.4   4.851 0.02880 * \nResiduals   197   9805    49.8                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nancova$coefficients\n\n(Intercept)      basval        trt2 \n  0.3536399  -0.2648315  -2.2086854 \n\nhigh2.locf %&gt;% ungroup() %&gt;%\n  select(change, group) %&gt;%\n  tbl_summary(by = group,\n              statistic = list(\n                all_continuous() ~ \"{mean} ({sd})\"), \n              digits = all_continuous() ~ 2 )\n\n\n\n\n\n  \n    \n    \n      Characteristic\n      Arm 1, N = 1001\n      Arm 2, N = 1001\n    \n  \n  \n    change\n-4.22 (6.38)\n-6.72 (7.90)\n  \n  \n  \n    \n      1 Mean (SD)\n    \n  \n\n\n\n\n\n\n\n\nset_mi&lt;-set_vars(\n  subjid = \"subject\",\n  visit = \"avisit\",\n  outcome = \"change\",\n  group = \"group\",\n  covariates = c(\"basval * avisit\", \"group * avisit\")\n)\n\nvars_an&lt;-set_mi\nvars_an$covariates &lt;- \"basval\"\n\ndat_ice &lt;- high2_expand %&gt;% \n  arrange(subject, avisit) %&gt;% \n  filter(is.na(change)) %&gt;% \n  group_by(subject) %&gt;% \n  slice(1) %&gt;%\n  ungroup() %&gt;% \n  select(subject, avisit) %&gt;% \n  mutate(strategy = \"JR\")\n\nmethod &lt;- method_bayes(\n  burn_in = 200,\n  burn_between = 5,\n  n_samples = 100,\n  seed = 072407\n)\n\ndraw_high2&lt;-draws(data=high2_expand, data_ice = dat_ice, vars=set_mi, method=method, ncores = 1, quiet = FALSE)\n\nimputeObj &lt;- impute(\n  draw_high2,\n  references = c(\"Arm 1\" = \"Arm 1\", \"Arm 2\" = \"Arm 1\")\n)\n\nimputed_high2 &lt;- extract_imputed_dfs(imputeObj)\n\nanaObj &lt;- analyse(\n  imputeObj,\n  vars = vars_an\n)\n\nTable: Estimates from copy jump to reference J2R imputation\n\npoolObj &lt;- pool(anaObj)\nas.data.frame(poolObj)\n\n        parameter         est        se       lci        uci         pval\n1      trt_Week 1 -0.04272539 0.6513099 -1.327240  1.2417894 9.477641e-01\n2  lsm_ref_Week 1 -1.64363730 0.4593710 -2.549610 -0.7376649 4.367614e-04\n3  lsm_alt_Week 1 -1.68636270 0.4593710 -2.592335 -0.7803903 3.118171e-04\n4      trt_Week 2 -0.56805913 0.8694895 -2.283587  1.1474688 5.143679e-01\n5  lsm_ref_Week 2 -3.29966757 0.6139776 -4.511086 -2.0882493 2.330387e-07\n6  lsm_alt_Week 2 -3.86772670 0.6154448 -5.082087 -2.6533665 2.383863e-09\n7      trt_Week 4 -1.23794505 0.9341607 -3.081702  0.6058116 1.868456e-01\n8  lsm_ref_Week 4 -4.56691815 0.6705840 -5.890893 -3.2429436 1.703692e-10\n9  lsm_alt_Week 4 -5.80486320 0.6575761 -7.102678 -4.5070482 1.090291e-15\n10     trt_Week 6 -1.69994606 1.0170780 -3.707618  0.3077255 9.647476e-02\n11 lsm_ref_Week 6 -5.21952895 0.7327090 -6.666472 -3.7725863 3.306987e-11\n12 lsm_alt_Week 6 -6.91947501 0.7414260 -8.383999 -5.4549508 9.864655e-17\n13     trt_Week 8 -1.72945373 1.1031354 -3.908286  0.4493783 1.189418e-01\n14 lsm_ref_Week 8 -5.31618579 0.8094870 -6.916486 -3.7158856 9.139985e-10\n15 lsm_alt_Week 8 -7.04563951 0.8266465 -8.680733 -5.4105457 2.995529e-14\n\n\n\n\n\nTake the figure from the visualization part from day 1 to better understand what we have found here.\n\nEstimates for all methods\n\n\n\nMean\nDiff\n\n\n\n\nCompleters, Arm 1\n-6.96\n\n\n\nCompleters, Arm 2\n-8.67\n-1.71\n\n\nMMRM, Arm 1\n-5.24\n\n\n\nMMRM, Arm 2\n-7.76\n-2.52\n\n\nLOCF, Arm 1\n-4.22\n\n\n\nLOCF, Arm 2\n-6.72\n-2.50\n\n\nJ2R , Arm 1\n-5.32\n\n\n\nJ2R , Arm 2\n-7.06\n-1.74"
  },
  {
    "objectID": "s2_inference_continuous.html",
    "href": "s2_inference_continuous.html",
    "title": "Inference from Longitudinal Data",
    "section": "",
    "text": "This section will focus on the application of Mixed Model with Repeated Measures (MMRMs). Our main focus will be the modeling of the means of the data. MMRMs are generalizations of standard linear models in the way that data is allowed to be correlated between subsequent measurements from the same subject and exhibit non-constant variability. A nice summary can be found in the user manual for the MIXED Procedure SAS, or the vignette for the mmrm package (Sabanes Bove et al. 2024).\nThe primary assumptions for MMRMs are:\n\nThe data are normally distributed\nThe means (expected values) of the data are linear in terms of a certain set of parameters.\nThe variances and covariances of the data are in terms of a different set of parameters, and they exhibit a structure matching one of those outlined in the former chapter.\n\nThe mixed linear model can be described via the following formula\n\\[\ny_i = X_i\\beta\\,+\\,Z_i\\gamma_i\\,+\\,\\varepsilon_i\\,,\\, i = 1,\\ldots,N\n\\]\nwhere \\(y\\) is the vector of responses (observed data, dependent variable), \\(\\beta\\) is an unknown vector of fixed effects with known design matrix \\(X\\), \\(\\gamma\\) is an unknown vector of random effects with known design matrix \\(Z\\), and \\(\\varepsilon\\) is an unknown random error vector. Furthermore \\(N\\) denotes the total number of subjects in our analysis. For the sake of readability, we will omit the subject index and simplify the above formula to\n\\[\ny = X\\beta\\,+\\,Z\\gamma\\,+\\,\\varepsilon\\,.\n\\]\nWe will further assume that \\(\\gamma\\) and \\(\\varepsilon\\) are uncorrelated Gaussian random variables with expectation \\(0\\) and variances \\(G\\) and \\(R\\), respectively. Then the variance-covariance matrix of \\(y\\) is given by\n\\[\n\\text{Var}(y) := V = ZGZ' + R\\,.\n\\] In this case \\(ZGZ'\\) comprises the random effects component, and \\(R\\) is the within-subject component.\nIn this workshop we will focus on the case where only the within-subject component is accounted for, via modeling of the \\(R\\) matrix. The random effects component \\(Z\\gamma\\) will be omitted. In this case we will have \\(\\text{Var}(y) = V = R\\), resulting in a model given by\n\\[\ny = X\\beta\\,+\\,\\varepsilon\\,.\n\\]\n\n\nIn the following sections we will use the package mmrm (Sabanes Bove et al. 2024). You can start and familiarise yourself with the main function mmrm() using the command\n\nlibrary(mmrm)\n?mmrm\n\nTwo inputs are strictly required to get mmrm() to work:\n\nA model formula\nThe dataset, containing the response, as well as all fixed effects and variables in the covariance matrix.\n\nExercise: Fit a model fit_cat_time using the dataset all2, with change as dependent variable, baseline value, visit, baseline by visit interaction and treatment by visit interaction as fixed effects and an unstructured covariance matrix for visits within each subject.\n\nHow do different choices for covariance matrices change the results? What is the difference on the estimation procedure?\nYou can obtain a summary of the fit results via summary(fit_cat_time). How do you interpret the fit summary?\nLook at the structure of the fit summary and try to extract the estimate of the \\(R\\) matrix.\nHow do other choices of covariance structures influence the estimation?\n\nSolution\n\n### Work with code chunks to find the solution to the exercises\n\n\n\n\nTime as continuous effect -&gt; single df for time and trt-by-time interaction\nModeling: - Need avisit for structure of covariance matrix - Implicit assumption is for the covariance between values for two timepoints to be equal, regardless of the specific timing\n\nfit_cont_time &lt;- mmrm::mmrm(\n  formula = change ~ basval*week + trt*week + us(avisit | subject),\n  weights = all2$week,\n  data = all2,\n  control = mmrm_control(method = \"Kenward-Roger\")\n)\n\nsummary (fit_cont_time)\n\nmmrm fit\n\nFormula:     change ~ basval * week + trt * week + us(avisit | subject)\nData:        all2 (used 150 observations from 50 subjects with maximum 3 \ntimepoints)\nWeights:     all2$week\nCovariance:  unstructured (6 variance parameters)\nMethod:      Kenward-Roger\nVcov Method: Kenward-Roger\nInference:   REML\n\nModel selection criteria:\n     AIC      BIC   logLik deviance \n   838.0    849.5   -413.0    826.0 \n\nCoefficients: \n            Estimate Std. Error       df t value Pr(&gt;|t|)   \n(Intercept)  6.83666    3.82960 47.00000   1.785  0.08068 . \nbasval      -0.47981    0.18600 47.00000  -2.580  0.01308 * \nweek        -1.94296    0.57420 47.00000  -3.384  0.00145 **\ntrt2        -0.49024    1.48826 47.00000  -0.329  0.74331   \nbasval:week  0.05275    0.02789 47.00000   1.892  0.06472 . \nweek:trt2   -0.36226    0.22315 47.00000  -1.623  0.11119   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCovariance estimate:\n        Week 2   Week 4   Week 8\nWeek 2 41.3658  42.8600  49.0752\nWeek 4 42.8600  86.6690 100.0141\nWeek 8 49.0752 100.0141 220.9000\n\n\nCan also apply non-linear transformations of time variable, in case the anticipated effect is not necessarily linear in time:\n\nall2$timesq &lt;- all2$week^2\n\nfit_cont_timesq &lt;- mmrm::mmrm(\n  formula = change ~ basval*timesq + trt*timesq + us(avisit | subject),\n  weights = all2$week,\n  data = all2,\n  control = mmrm_control(method = \"Kenward-Roger\")\n)\n\nsummary(fit_cont_timesq)\n\nmmrm fit\n\nFormula:     change ~ basval * timesq + trt * timesq + us(avisit | subject)\nData:        all2 (used 150 observations from 50 subjects with maximum 3 \ntimepoints)\nWeights:     all2$week\nCovariance:  unstructured (6 variance parameters)\nMethod:      Kenward-Roger\nVcov Method: Kenward-Roger\nInference:   REML\n\nModel selection criteria:\n     AIC      BIC   logLik deviance \n   861.8    873.3   -424.9    849.8 \n\nCoefficients: \n               Estimate Std. Error        df t value Pr(&gt;|t|)    \n(Intercept)    3.298095   3.300323 47.000000   0.999  0.32275    \nbasval        -0.396751   0.160290 47.000000  -2.475  0.01698 *  \ntimesq        -0.191395   0.053074 47.000000  -3.606  0.00075 ***\ntrt2          -1.224631   1.282574 47.000000  -0.955  0.34455    \nbasval:timesq  0.005800   0.002578 47.000000   2.250  0.02916 *  \ntimesq:trt2   -0.032220   0.020626 47.000000  -1.562  0.12497    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCovariance estimate:\n        Week 2   Week 4   Week 8\nWeek 2 42.2220  41.1223  47.8394\nWeek 4 41.1223  90.1270 102.6988\nWeek 8 47.8394 102.6988 222.5403\n\n\n\n\n\nLS Means are means of the dependent variable adjusted for covariates in the statistical model. We can obtain LS Means estimates and contrasts allowing for a treatment comparison using the emmeans package.\nExample: Calculate the observed (raw) means of changes along with number of patients by treatment group from the dataset all2 overall and by visit. Then take the model fit_cat_time and derive the respective LS Means from the model. What do you observe?\n\n# Raw means\n\nall2 %&gt;% \n  dplyr::group_by(group) %&gt;% \n  dplyr::summarise(\n    N = dplyr::n(),\n    Mean = mean(change),\n    .groups = \"drop\"\n  )\n\n# A tibble: 2 × 3\n  group     N  Mean\n  &lt;fct&gt; &lt;int&gt; &lt;dbl&gt;\n1 Arm 1    75 -6.96\n2 Arm 2    75 -9.03\n\nall2 %&gt;% \n  dplyr::group_by(group, avisit) %&gt;% \n  dplyr::summarise(\n    N = dplyr::n(),\n    Mean = mean(change),\n    .groups = \"drop\"\n  )\n\n# A tibble: 6 × 4\n  group avisit     N   Mean\n  &lt;fct&gt; &lt;fct&gt;  &lt;int&gt;  &lt;dbl&gt;\n1 Arm 1 Week 2    25  -4.2 \n2 Arm 1 Week 4    25  -6.8 \n3 Arm 1 Week 8    25  -9.88\n4 Arm 2 Week 2    25  -5.24\n5 Arm 2 Week 4    25  -8.6 \n6 Arm 2 Week 8    25 -13.2 \n\n\nThe respective LS Means from the model with time as a fixed factor yields the following estimates:\n\nlibrary(emmeans)\n\nemmeans::ref_grid(fit_cat_time)\n\n'emmGrid' object with variables:\n    basval = 19.56\n    avisit = Week 2, Week 4, Week 8\n    trt = 1, 2\n\nemmeans(fit_cat_time, ~trt)\n\nNOTE: Results may be misleading due to involvement in interactions\n\n\n trt emmean    SE df lower.CL upper.CL\n 1    -6.90 0.836 47    -8.58    -5.22\n 2    -9.09 0.836 47   -10.77    -7.41\n\nResults are averaged over the levels of: avisit \nConfidence level used: 0.95 \n\nemmeans(fit_cat_time, ~trt*avisit)\n\n trt avisit emmean    SE df lower.CL upper.CL\n 1   Week 2  -4.13 0.899 47    -5.93    -2.32\n 2   Week 2  -5.31 0.899 47    -7.12    -3.51\n 1   Week 4  -6.70 0.916 47    -8.55    -4.86\n 2   Week 4  -8.70 0.916 47   -10.54    -6.85\n 1   Week 8  -9.86 1.033 47   -11.94    -7.79\n 2   Week 8 -13.26 1.033 47   -15.33   -11.18\n\nConfidence level used: 0.95 \n\n\n\n\nIn the example above we have used the standard option for the weights in the calculation of LS Means. We will delve deeper into the following two options and will try to understand the difference:\n\nweights = \"equal\": Each stratum induced by covariate levels is assigned the same weight in the calculation of the LS Means. This is the default option.\nweights = \"proportional\": Each stratum induced by covariate levels is assigned a weight according to their observed proportion in the calculation of the LS Mean. This option gives each stratum a weight corresponding to its size. Estimates using this option are reflective of the balance of covariates in the data.\n\nExercise: Based on the fit_cat_time model, compare the LS Means for the change in the response variable by treatment overall and treatment by visit interaction using the different options for weight. Compare the results for the two LS Means options to the observed means and to one another.\nDiscuss the following points:\n\nWhy is there no difference between LS Means estimates for the overall treatment effect and the treatment by visit interaction? (Hint: Create a frequency table)\n\nNow update the fit_cat_time model to fit_cat_time2, and include the covariate gender. Estimate the same LS Means for the change in the response variable by treatment (overall) and treatment by visit interaction.\n\nWhy is there a difference now between results from the different LS Means options? (Hint: another frequency table can help)\nWhat effect could missing data have on the estimation, even in the case of fit_cat_time? I.e. what would happen if this data was not complete but subject to missingness, with the degree of missing data increasing over time and being disproportionate between treatment arms?\n\nSolution:\n\n### Work with code chunks to find the solution to the exercises\n\n\n\n\nMost of the times, the quantity we are truly interested in when reading out a study, is the contrast between treatment arms. This contrast can be built either based on LS Means at some landmark time point, or as a longitudinal (linear) combination of LS Means from multiple time points.\nWe can use the pairs() or the contrast() functions, where the latter provides more flexibility for the calculation of linear combinations from multiple timepoints.\n\nlsmns &lt;- emmeans::emmeans(fit_cat_time, ~trt*avisit, weights = \"proportional\")\npairs(lsmns, reverse = TRUE, adjust = NULL)\n\n contrast                  estimate    SE   df t.ratio p.value\n trt2 Week 2 - trt1 Week 2    -1.19 1.273 47.0  -0.935  0.3546\n trt1 Week 4 - trt1 Week 2    -2.58 0.659 47.0  -3.917  0.0003\n trt1 Week 4 - trt2 Week 2    -1.39 1.284 61.3  -1.082  0.2835\n trt2 Week 4 - trt1 Week 2    -4.57 1.284 61.3  -3.559  0.0007\n trt2 Week 4 - trt2 Week 2    -3.38 0.659 47.0  -5.133  &lt;.0001\n trt2 Week 4 - trt1 Week 4    -1.99 1.296 47.0  -1.536  0.1313\n trt1 Week 8 - trt1 Week 2    -5.74 0.950 47.0  -6.043  &lt;.0001\n trt1 Week 8 - trt2 Week 2    -4.55 1.370 73.3  -3.321  0.0014\n trt1 Week 8 - trt1 Week 4    -3.16 0.716 47.0  -4.416  0.0001\n trt1 Week 8 - trt2 Week 4    -1.17 1.381 61.1  -0.846  0.4007\n trt2 Week 8 - trt1 Week 2    -9.13 1.370 73.3  -6.664  &lt;.0001\n trt2 Week 8 - trt2 Week 2    -7.94 0.950 47.0  -8.361  &lt;.0001\n trt2 Week 8 - trt1 Week 4    -6.55 1.381 61.1  -4.742  &lt;.0001\n trt2 Week 8 - trt2 Week 4    -4.56 0.716 47.0  -6.373  &lt;.0001\n trt2 Week 8 - trt1 Week 8    -3.39 1.462 47.0  -2.319  0.0248\n\n### This is the same as the following\nprs &lt;- contrast(lsmns, method = \"revpairwise\", adjust = NULL)\n\nNote that both pairs() and contrast() provide multiple options for fine-tuning. We chose adjust = NULL in order to not perform any multiplicity adjustment (default method would have been the Tukey method). We also chose reverse = TRUE to reverse the order of comparisons performed by pairs(), as the default would have given us the contrast for Treatment 1 - Treatment 2. Consequently, we applied method = \"revpairwise\" in the contrast() function.\nWe can obtain the coefficients in the calculation of the contrasts via coef():\n\ncoef(prs)\n\n            trt avisit c.1 c.2 c.3 c.4 c.5 c.6 c.7 c.8 c.9 c.10 c.11 c.12 c.13\ntrt1 Week 2   1 Week 2  -1  -1   0  -1   0   0  -1   0   0    0   -1    0    0\ntrt2 Week 2   2 Week 2   1   0  -1   0  -1   0   0  -1   0    0    0   -1    0\ntrt1 Week 4   1 Week 4   0   1   1   0   0  -1   0   0  -1    0    0    0   -1\ntrt2 Week 4   2 Week 4   0   0   0   1   1   1   0   0   0   -1    0    0    0\ntrt1 Week 8   1 Week 8   0   0   0   0   0   0   1   1   1    1    0    0    0\ntrt2 Week 8   2 Week 8   0   0   0   0   0   0   0   0   0    0    1    1    1\n            c.14 c.15\ntrt1 Week 2    0    0\ntrt2 Week 2    0    0\ntrt1 Week 4    0    0\ntrt2 Week 4   -1    0\ntrt1 Week 8    0   -1\ntrt2 Week 8    1    1\n\n\nThe output above is probably more than we wanted. We are only interested in contrasts between Treatments 1 and 2 at the same time points. Here contrast() provides more flexibility. Instead of parsing a string with the name of a method to the method argument, we provide a named list of coefficients. These coefficients are identical with the onces we can see in the coefficient matrix above. We can use it as a guide.\n\ncontrast(\n  lsmns, \n  method = list(\n    \"Difference Trt 2 - Trt 1 at Week 4\" = c(0, 0, -1, 1, 0, 0),\n    \"Difference Trt 2 - Trt 1 at Week 8\" = c(0, 0, 0, 0, -1, 1)\n  ), \n  adjust = NULL)\n\n contrast                           estimate   SE df t.ratio p.value\n Difference Trt 2 - Trt 1 at Week 4    -1.99 1.30 47  -1.536  0.1313\n Difference Trt 2 - Trt 1 at Week 8    -3.39 1.46 47  -2.319  0.0248\n\n\nThis way of computing LS Means from our MMRM allows us to calculate all kinds of linear combinations of LS Means. Assume we were interested in the longitudinal mean of changes from baseline averaged over Weeks 2, 4 and 8. This would look like this:\n\ncontrast(\n  lsmns, \n  method = list(\n    \"Difference Trt 2 - Trt 1 Averaged over Weeks 2, 4 and 8\" = c(-1, 1, -1, 1, -1, 1)/3\n  ), \n  adjust = NULL)\n\n contrast                                                estimate   SE df\n Difference Trt 2 - Trt 1 Averaged over Weeks 2, 4 and 8    -2.19 1.18 47\n t.ratio p.value\n  -1.850  0.0705\n\n\n\n\n\n\nThe following section closely follows the content in Chapter 10 in (Fitzmaurice 2011).\nOur analysis should be concluded with a look into the fit diagnostics, more specifically, the residuals. Residuals are defined by the difference between the true responses and the fitted values from the model:\n\\[\nr := y - X\\hat\\beta\\,,\n\\] where \\(\\hat\\beta\\) are the estimated coefficients from our model. Residuals provide an estimate of the true vector of random errors\n\\[\n\\varepsilon = y - X\\beta\\,.\n\\]\nAs per our modeling assumptions, \\(\\varepsilon\\) should follow a normal distribution with mean zero. The mean of the residuals is zero and therefore identical with the mean of the error term. For the covariance of the residuals however, the variance-covariance matrix of \\(\\varepsilon\\) only serves us as an approximation (as suggested by (Fitzmaurice 2011) for all ‘practical applications’):\n\\[\nCov(r) \\approx Cov(\\varepsilon) = R\\,.\n\\] This assumption has several implications on the residual diagnostics:\n\nThe variance is not necessarily constant. Plotting the fitted values versus the residuals might therefore lead to a non-constant range. An examination of the residual variance or autocorrelation among residuals is therefore not very meaningful.\nResiduals from analyses of longitudinal data can exhibit correlation with the covariates. Scatterplots of residuals versus selected covariates can therefore reveal systematic trends (which normally should not be the case).\n\nA transformation of residuals to achieve constant variance and zero correlation is therefore often useful. This transformation uses the so-called Cholesky decomposition of the variance-covariance matrix \\(R\\). Let \\(L\\) be a lower triangular matrix, such that\n\\[\nR = L\\,L'\\,,\n\\] then the transformed residuals are given by \\[\nr^* =  L^{-1}(y - X\\beta)\\,.\n\\] In the mmrm package, transformed residuals can be derived using the type = \"normalized\" option.\nExercise: Which visualisations can you think of that make sense to assess the goodness of fit here? Create a new tibble (or data.frame) containing the variables of importance and try plotting them in a meaningful way. Discuss the results within your group.\nSolution:\n\n### Work with code chunks to find the solution to the exercises\n\n\n\n\nIn the former examples we used baseline severity as a continuous covariate, which is the most common approach. In this case we treat baseval as a fixed effect and used changes from baseline as response variable in our model formula. This approach comes with a couple of caveats:\n\nOnly subjects with a non-missing baseline and at least one non-missing follow-up response contribute to the analysis (i.e. at least one non-missing change from baseline value).\nOnly subjects with complete covariate data contribute to the analysis.\n\nHence, if baseval is missing for a subject, this subject will not be included in our model. (Liang and Zeger 2000) introduced the so-called LDA (longitudinal data analysis) and cLDA (constrained longitudinal data analysis) models. The basic idea behind these models is that baseline can be regarded as a response at Time 0, and can therefore be included in the vector of responses.\nIn order to fit the model, we need to apply some data wrangling upfront and add baseline to the response column (aval). Note that this step is usually not required when dealing with CDISC compliant datasets, such as ADaM or SDTM.\n\nbase &lt;- dplyr::distinct(all2, subject, trt, basval, group, gender) %&gt;% \n  dplyr::mutate(\n    time = 0,\n    aval = basval,\n    avisit = \"Baseline\"\n  )\n\nall2_lda &lt;- dplyr::bind_rows(all2, base) %&gt;% \n  dplyr::mutate(\n    avisit = forcats::fct_reorder(avisit, time)\n  )\n\n### Check Order of avisit levels:\nlevels(all2_lda$avisit)\n\n[1] \"Baseline\" \"Week 2\"   \"Week 4\"   \"Week 8\"  \n\n\nWe can now fit a model, including aval as a response variable, treatment (group), visit (avisit) and a treatment-by-time interaction term:\n\nlda &lt;- mmrm(\n  formula = aval ~ group*avisit + us(avisit | subject),\n  data = all2_lda,\n  control = mmrm_control(method = \"Kenward-Roger\")\n)\n\nThe LS Mean estimates per treatment arm for mean changes to Week 8 (Time 3) are now obtained via contrasts between Week 3 and Baseline:\n\nlsmns &lt;- emmeans(lda, ~group*avisit, weights = \"proportional\")\ncontrast(\n  lsmns,\n  method = list(\n    \"LS Means for Change from Baseline to Week 8 Treatment 1\" = c(-1, 0, 0, 0, 0, 0, 1, 0),\n    \"LS Means for Change from Baseline to Week 8 Treatment 2\" = c(0, -1, 0, 0, 0, 0, 0, 1),\n    \"LS Means for Difference in Changes to Week 8 btw. Treatment 2 and Treatment 1\" = c(1, -1, 0, 0, 0, 0, -1, 1)\n  ), \n  adjust = NULL\n)\n\n contrast                                                                     \n LS Means for Change from Baseline to Week 8 Treatment 1                      \n LS Means for Change from Baseline to Week 8 Treatment 2                      \n LS Means for Difference in Changes to Week 8 btw. Treatment 2 and Treatment 1\n estimate   SE df t.ratio p.value\n    -9.88 1.01 48  -9.768  &lt;.0001\n   -13.24 1.01 48 -13.089  &lt;.0001\n    -3.36 1.43 48  -2.349  0.0230\n\n\nA note on caveats associated with LDA models:\n\nIn cases where the treatment effect has a rapid onset, the linearity assumption underlying the model is violated.\nUse of baseline as a response, as opposed to a covariate, ignores the predictive nature of baseline severity as an explanatory factor in the residual error.\n\nGenerally, LDA models can be very useful in trials with only very few visits per patient due to the additional response value being included. In longer trials however, it is recommended to refrain from their use for the disadvantages stated above. In this case, a decent data quality is key to avoid missing baseline data (if possible completely) and reduce the degree of missingness with regards to follow-up data as much as possible.\n\n\n\nIn this chapter we have dealt with models where the response is modeled as a linear combination of fixed effect parameters \\(\\beta\\) and a random error \\(\\varepsilon\\)\n\\[\ny = X\\beta\\,+\\,\\varepsilon\\,.\n\\]\nThe fixed effects in this model represent the population effects and we used the random error to model the subject-specific influences. Although we used the term mixed model for repeated measures (MMRM), this nomenclature is misleading in the way that our model does not truly deserve the term mixed. A true mixed model would require the involvement of fixed and random effects. The latter have previously been omitted.\nWhile we will not cover random coefficient models (also known as random slope and intercept models or RS&I models) in depth in this class, we would like to point to couple of useful features. For further reading, one can refer to Chapter 8 in (Fitzmaurice 2011).\nThe distinction between fixed and random effects in linear mixed effect models allows for modeling of both between-subject and within-subject variations. In random coefficient models (i.e. MMRMs with a non-trivial random effect) each subject is assumed to have their own (linear) rate of response over time, expressed as random slopes and intercepts.\n“In addition it is not only possible to estimate parameters that describe how the mean response changes in the population of interest, it is also possible to predict how individual response trajectories change over time. For example, linear mixed effects models can be used to obtain predictions of individual growth trajectories over time.” (Fitzmaurice 2011)\nLinear mixed effects models therefore allow for inferences on the individual (subject) basis rather than the entirety of individuals (population).\nAnother advantage of linear mixed models is their flexibility with respect to imbalances in longitudinal data. We are no longer bound by the restriction to have (approximately) the same number of observations per subject, i.e. the approximately the same length of follow-up, or even for the visits to be taken at the same times. This feature is especially useful whenever we are dealing with parallel design studies, involving the comparison of interventions with different dosing/ assessment frequencies.\nNote that the mmrm package so far does not allow for fitting of linear mixed effect models, in the sense that an actual random effects term is included in the model formula. For these kind of models, we point to the package lme4 (Bates et al. 2015)."
  },
  {
    "objectID": "s2_inference_continuous.html#categorical-time",
    "href": "s2_inference_continuous.html#categorical-time",
    "title": "Inference from Longitudinal Data",
    "section": "",
    "text": "In the following sections we will use the package mmrm (Sabanes Bove et al. 2024). You can start and familiarise yourself with the main function mmrm() using the command\n\nlibrary(mmrm)\n?mmrm\n\nTwo inputs are strictly required to get mmrm() to work:\n\nA model formula\nThe dataset, containing the response, as well as all fixed effects and variables in the covariance matrix.\n\nExercise: Fit a model fit_cat_time using the dataset all2, with change as dependent variable, baseline value, visit, baseline by visit interaction and treatment by visit interaction as fixed effects and an unstructured covariance matrix for visits within each subject.\n\nHow do different choices for covariance matrices change the results? What is the difference on the estimation procedure?\nYou can obtain a summary of the fit results via summary(fit_cat_time). How do you interpret the fit summary?\nLook at the structure of the fit summary and try to extract the estimate of the \\(R\\) matrix.\nHow do other choices of covariance structures influence the estimation?\n\nSolution\n\n### Work with code chunks to find the solution to the exercises"
  },
  {
    "objectID": "s2_inference_continuous.html#continuous-time",
    "href": "s2_inference_continuous.html#continuous-time",
    "title": "Inference from Longitudinal Data",
    "section": "",
    "text": "Time as continuous effect -&gt; single df for time and trt-by-time interaction\nModeling: - Need avisit for structure of covariance matrix - Implicit assumption is for the covariance between values for two timepoints to be equal, regardless of the specific timing\n\nfit_cont_time &lt;- mmrm::mmrm(\n  formula = change ~ basval*week + trt*week + us(avisit | subject),\n  weights = all2$week,\n  data = all2,\n  control = mmrm_control(method = \"Kenward-Roger\")\n)\n\nsummary (fit_cont_time)\n\nmmrm fit\n\nFormula:     change ~ basval * week + trt * week + us(avisit | subject)\nData:        all2 (used 150 observations from 50 subjects with maximum 3 \ntimepoints)\nWeights:     all2$week\nCovariance:  unstructured (6 variance parameters)\nMethod:      Kenward-Roger\nVcov Method: Kenward-Roger\nInference:   REML\n\nModel selection criteria:\n     AIC      BIC   logLik deviance \n   838.0    849.5   -413.0    826.0 \n\nCoefficients: \n            Estimate Std. Error       df t value Pr(&gt;|t|)   \n(Intercept)  6.83666    3.82960 47.00000   1.785  0.08068 . \nbasval      -0.47981    0.18600 47.00000  -2.580  0.01308 * \nweek        -1.94296    0.57420 47.00000  -3.384  0.00145 **\ntrt2        -0.49024    1.48826 47.00000  -0.329  0.74331   \nbasval:week  0.05275    0.02789 47.00000   1.892  0.06472 . \nweek:trt2   -0.36226    0.22315 47.00000  -1.623  0.11119   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCovariance estimate:\n        Week 2   Week 4   Week 8\nWeek 2 41.3658  42.8600  49.0752\nWeek 4 42.8600  86.6690 100.0141\nWeek 8 49.0752 100.0141 220.9000\n\n\nCan also apply non-linear transformations of time variable, in case the anticipated effect is not necessarily linear in time:\n\nall2$timesq &lt;- all2$week^2\n\nfit_cont_timesq &lt;- mmrm::mmrm(\n  formula = change ~ basval*timesq + trt*timesq + us(avisit | subject),\n  weights = all2$week,\n  data = all2,\n  control = mmrm_control(method = \"Kenward-Roger\")\n)\n\nsummary(fit_cont_timesq)\n\nmmrm fit\n\nFormula:     change ~ basval * timesq + trt * timesq + us(avisit | subject)\nData:        all2 (used 150 observations from 50 subjects with maximum 3 \ntimepoints)\nWeights:     all2$week\nCovariance:  unstructured (6 variance parameters)\nMethod:      Kenward-Roger\nVcov Method: Kenward-Roger\nInference:   REML\n\nModel selection criteria:\n     AIC      BIC   logLik deviance \n   861.8    873.3   -424.9    849.8 \n\nCoefficients: \n               Estimate Std. Error        df t value Pr(&gt;|t|)    \n(Intercept)    3.298095   3.300323 47.000000   0.999  0.32275    \nbasval        -0.396751   0.160290 47.000000  -2.475  0.01698 *  \ntimesq        -0.191395   0.053074 47.000000  -3.606  0.00075 ***\ntrt2          -1.224631   1.282574 47.000000  -0.955  0.34455    \nbasval:timesq  0.005800   0.002578 47.000000   2.250  0.02916 *  \ntimesq:trt2   -0.032220   0.020626 47.000000  -1.562  0.12497    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCovariance estimate:\n        Week 2   Week 4   Week 8\nWeek 2 42.2220  41.1223  47.8394\nWeek 4 41.1223  90.1270 102.6988\nWeek 8 47.8394 102.6988 222.5403"
  },
  {
    "objectID": "s2_inference_continuous.html#adjusted-ls-means-from-mmrms",
    "href": "s2_inference_continuous.html#adjusted-ls-means-from-mmrms",
    "title": "Inference from Longitudinal Data",
    "section": "",
    "text": "LS Means are means of the dependent variable adjusted for covariates in the statistical model. We can obtain LS Means estimates and contrasts allowing for a treatment comparison using the emmeans package.\nExample: Calculate the observed (raw) means of changes along with number of patients by treatment group from the dataset all2 overall and by visit. Then take the model fit_cat_time and derive the respective LS Means from the model. What do you observe?\n\n# Raw means\n\nall2 %&gt;% \n  dplyr::group_by(group) %&gt;% \n  dplyr::summarise(\n    N = dplyr::n(),\n    Mean = mean(change),\n    .groups = \"drop\"\n  )\n\n# A tibble: 2 × 3\n  group     N  Mean\n  &lt;fct&gt; &lt;int&gt; &lt;dbl&gt;\n1 Arm 1    75 -6.96\n2 Arm 2    75 -9.03\n\nall2 %&gt;% \n  dplyr::group_by(group, avisit) %&gt;% \n  dplyr::summarise(\n    N = dplyr::n(),\n    Mean = mean(change),\n    .groups = \"drop\"\n  )\n\n# A tibble: 6 × 4\n  group avisit     N   Mean\n  &lt;fct&gt; &lt;fct&gt;  &lt;int&gt;  &lt;dbl&gt;\n1 Arm 1 Week 2    25  -4.2 \n2 Arm 1 Week 4    25  -6.8 \n3 Arm 1 Week 8    25  -9.88\n4 Arm 2 Week 2    25  -5.24\n5 Arm 2 Week 4    25  -8.6 \n6 Arm 2 Week 8    25 -13.2 \n\n\nThe respective LS Means from the model with time as a fixed factor yields the following estimates:\n\nlibrary(emmeans)\n\nemmeans::ref_grid(fit_cat_time)\n\n'emmGrid' object with variables:\n    basval = 19.56\n    avisit = Week 2, Week 4, Week 8\n    trt = 1, 2\n\nemmeans(fit_cat_time, ~trt)\n\nNOTE: Results may be misleading due to involvement in interactions\n\n\n trt emmean    SE df lower.CL upper.CL\n 1    -6.90 0.836 47    -8.58    -5.22\n 2    -9.09 0.836 47   -10.77    -7.41\n\nResults are averaged over the levels of: avisit \nConfidence level used: 0.95 \n\nemmeans(fit_cat_time, ~trt*avisit)\n\n trt avisit emmean    SE df lower.CL upper.CL\n 1   Week 2  -4.13 0.899 47    -5.93    -2.32\n 2   Week 2  -5.31 0.899 47    -7.12    -3.51\n 1   Week 4  -6.70 0.916 47    -8.55    -4.86\n 2   Week 4  -8.70 0.916 47   -10.54    -6.85\n 1   Week 8  -9.86 1.033 47   -11.94    -7.79\n 2   Week 8 -13.26 1.033 47   -15.33   -11.18\n\nConfidence level used: 0.95 \n\n\n\n\nIn the example above we have used the standard option for the weights in the calculation of LS Means. We will delve deeper into the following two options and will try to understand the difference:\n\nweights = \"equal\": Each stratum induced by covariate levels is assigned the same weight in the calculation of the LS Means. This is the default option.\nweights = \"proportional\": Each stratum induced by covariate levels is assigned a weight according to their observed proportion in the calculation of the LS Mean. This option gives each stratum a weight corresponding to its size. Estimates using this option are reflective of the balance of covariates in the data.\n\nExercise: Based on the fit_cat_time model, compare the LS Means for the change in the response variable by treatment overall and treatment by visit interaction using the different options for weight. Compare the results for the two LS Means options to the observed means and to one another.\nDiscuss the following points:\n\nWhy is there no difference between LS Means estimates for the overall treatment effect and the treatment by visit interaction? (Hint: Create a frequency table)\n\nNow update the fit_cat_time model to fit_cat_time2, and include the covariate gender. Estimate the same LS Means for the change in the response variable by treatment (overall) and treatment by visit interaction.\n\nWhy is there a difference now between results from the different LS Means options? (Hint: another frequency table can help)\nWhat effect could missing data have on the estimation, even in the case of fit_cat_time? I.e. what would happen if this data was not complete but subject to missingness, with the degree of missing data increasing over time and being disproportionate between treatment arms?\n\nSolution:\n\n### Work with code chunks to find the solution to the exercises\n\n\n\n\nMost of the times, the quantity we are truly interested in when reading out a study, is the contrast between treatment arms. This contrast can be built either based on LS Means at some landmark time point, or as a longitudinal (linear) combination of LS Means from multiple time points.\nWe can use the pairs() or the contrast() functions, where the latter provides more flexibility for the calculation of linear combinations from multiple timepoints.\n\nlsmns &lt;- emmeans::emmeans(fit_cat_time, ~trt*avisit, weights = \"proportional\")\npairs(lsmns, reverse = TRUE, adjust = NULL)\n\n contrast                  estimate    SE   df t.ratio p.value\n trt2 Week 2 - trt1 Week 2    -1.19 1.273 47.0  -0.935  0.3546\n trt1 Week 4 - trt1 Week 2    -2.58 0.659 47.0  -3.917  0.0003\n trt1 Week 4 - trt2 Week 2    -1.39 1.284 61.3  -1.082  0.2835\n trt2 Week 4 - trt1 Week 2    -4.57 1.284 61.3  -3.559  0.0007\n trt2 Week 4 - trt2 Week 2    -3.38 0.659 47.0  -5.133  &lt;.0001\n trt2 Week 4 - trt1 Week 4    -1.99 1.296 47.0  -1.536  0.1313\n trt1 Week 8 - trt1 Week 2    -5.74 0.950 47.0  -6.043  &lt;.0001\n trt1 Week 8 - trt2 Week 2    -4.55 1.370 73.3  -3.321  0.0014\n trt1 Week 8 - trt1 Week 4    -3.16 0.716 47.0  -4.416  0.0001\n trt1 Week 8 - trt2 Week 4    -1.17 1.381 61.1  -0.846  0.4007\n trt2 Week 8 - trt1 Week 2    -9.13 1.370 73.3  -6.664  &lt;.0001\n trt2 Week 8 - trt2 Week 2    -7.94 0.950 47.0  -8.361  &lt;.0001\n trt2 Week 8 - trt1 Week 4    -6.55 1.381 61.1  -4.742  &lt;.0001\n trt2 Week 8 - trt2 Week 4    -4.56 0.716 47.0  -6.373  &lt;.0001\n trt2 Week 8 - trt1 Week 8    -3.39 1.462 47.0  -2.319  0.0248\n\n### This is the same as the following\nprs &lt;- contrast(lsmns, method = \"revpairwise\", adjust = NULL)\n\nNote that both pairs() and contrast() provide multiple options for fine-tuning. We chose adjust = NULL in order to not perform any multiplicity adjustment (default method would have been the Tukey method). We also chose reverse = TRUE to reverse the order of comparisons performed by pairs(), as the default would have given us the contrast for Treatment 1 - Treatment 2. Consequently, we applied method = \"revpairwise\" in the contrast() function.\nWe can obtain the coefficients in the calculation of the contrasts via coef():\n\ncoef(prs)\n\n            trt avisit c.1 c.2 c.3 c.4 c.5 c.6 c.7 c.8 c.9 c.10 c.11 c.12 c.13\ntrt1 Week 2   1 Week 2  -1  -1   0  -1   0   0  -1   0   0    0   -1    0    0\ntrt2 Week 2   2 Week 2   1   0  -1   0  -1   0   0  -1   0    0    0   -1    0\ntrt1 Week 4   1 Week 4   0   1   1   0   0  -1   0   0  -1    0    0    0   -1\ntrt2 Week 4   2 Week 4   0   0   0   1   1   1   0   0   0   -1    0    0    0\ntrt1 Week 8   1 Week 8   0   0   0   0   0   0   1   1   1    1    0    0    0\ntrt2 Week 8   2 Week 8   0   0   0   0   0   0   0   0   0    0    1    1    1\n            c.14 c.15\ntrt1 Week 2    0    0\ntrt2 Week 2    0    0\ntrt1 Week 4    0    0\ntrt2 Week 4   -1    0\ntrt1 Week 8    0   -1\ntrt2 Week 8    1    1\n\n\nThe output above is probably more than we wanted. We are only interested in contrasts between Treatments 1 and 2 at the same time points. Here contrast() provides more flexibility. Instead of parsing a string with the name of a method to the method argument, we provide a named list of coefficients. These coefficients are identical with the onces we can see in the coefficient matrix above. We can use it as a guide.\n\ncontrast(\n  lsmns, \n  method = list(\n    \"Difference Trt 2 - Trt 1 at Week 4\" = c(0, 0, -1, 1, 0, 0),\n    \"Difference Trt 2 - Trt 1 at Week 8\" = c(0, 0, 0, 0, -1, 1)\n  ), \n  adjust = NULL)\n\n contrast                           estimate   SE df t.ratio p.value\n Difference Trt 2 - Trt 1 at Week 4    -1.99 1.30 47  -1.536  0.1313\n Difference Trt 2 - Trt 1 at Week 8    -3.39 1.46 47  -2.319  0.0248\n\n\nThis way of computing LS Means from our MMRM allows us to calculate all kinds of linear combinations of LS Means. Assume we were interested in the longitudinal mean of changes from baseline averaged over Weeks 2, 4 and 8. This would look like this:\n\ncontrast(\n  lsmns, \n  method = list(\n    \"Difference Trt 2 - Trt 1 Averaged over Weeks 2, 4 and 8\" = c(-1, 1, -1, 1, -1, 1)/3\n  ), \n  adjust = NULL)\n\n contrast                                                estimate   SE df\n Difference Trt 2 - Trt 1 Averaged over Weeks 2, 4 and 8    -2.19 1.18 47\n t.ratio p.value\n  -1.850  0.0705"
  },
  {
    "objectID": "s2_inference_continuous.html#fit-diagnostics",
    "href": "s2_inference_continuous.html#fit-diagnostics",
    "title": "Inference from Longitudinal Data",
    "section": "",
    "text": "The following section closely follows the content in Chapter 10 in (Fitzmaurice 2011).\nOur analysis should be concluded with a look into the fit diagnostics, more specifically, the residuals. Residuals are defined by the difference between the true responses and the fitted values from the model:\n\\[\nr := y - X\\hat\\beta\\,,\n\\] where \\(\\hat\\beta\\) are the estimated coefficients from our model. Residuals provide an estimate of the true vector of random errors\n\\[\n\\varepsilon = y - X\\beta\\,.\n\\]\nAs per our modeling assumptions, \\(\\varepsilon\\) should follow a normal distribution with mean zero. The mean of the residuals is zero and therefore identical with the mean of the error term. For the covariance of the residuals however, the variance-covariance matrix of \\(\\varepsilon\\) only serves us as an approximation (as suggested by (Fitzmaurice 2011) for all ‘practical applications’):\n\\[\nCov(r) \\approx Cov(\\varepsilon) = R\\,.\n\\] This assumption has several implications on the residual diagnostics:\n\nThe variance is not necessarily constant. Plotting the fitted values versus the residuals might therefore lead to a non-constant range. An examination of the residual variance or autocorrelation among residuals is therefore not very meaningful.\nResiduals from analyses of longitudinal data can exhibit correlation with the covariates. Scatterplots of residuals versus selected covariates can therefore reveal systematic trends (which normally should not be the case).\n\nA transformation of residuals to achieve constant variance and zero correlation is therefore often useful. This transformation uses the so-called Cholesky decomposition of the variance-covariance matrix \\(R\\). Let \\(L\\) be a lower triangular matrix, such that\n\\[\nR = L\\,L'\\,,\n\\] then the transformed residuals are given by \\[\nr^* =  L^{-1}(y - X\\beta)\\,.\n\\] In the mmrm package, transformed residuals can be derived using the type = \"normalized\" option.\nExercise: Which visualisations can you think of that make sense to assess the goodness of fit here? Create a new tibble (or data.frame) containing the variables of importance and try plotting them in a meaningful way. Discuss the results within your group.\nSolution:\n\n### Work with code chunks to find the solution to the exercises"
  },
  {
    "objectID": "s2_inference_continuous.html#baseline-as-a-response-clda-lda",
    "href": "s2_inference_continuous.html#baseline-as-a-response-clda-lda",
    "title": "Inference from Longitudinal Data",
    "section": "",
    "text": "In the former examples we used baseline severity as a continuous covariate, which is the most common approach. In this case we treat baseval as a fixed effect and used changes from baseline as response variable in our model formula. This approach comes with a couple of caveats:\n\nOnly subjects with a non-missing baseline and at least one non-missing follow-up response contribute to the analysis (i.e. at least one non-missing change from baseline value).\nOnly subjects with complete covariate data contribute to the analysis.\n\nHence, if baseval is missing for a subject, this subject will not be included in our model. (Liang and Zeger 2000) introduced the so-called LDA (longitudinal data analysis) and cLDA (constrained longitudinal data analysis) models. The basic idea behind these models is that baseline can be regarded as a response at Time 0, and can therefore be included in the vector of responses.\nIn order to fit the model, we need to apply some data wrangling upfront and add baseline to the response column (aval). Note that this step is usually not required when dealing with CDISC compliant datasets, such as ADaM or SDTM.\n\nbase &lt;- dplyr::distinct(all2, subject, trt, basval, group, gender) %&gt;% \n  dplyr::mutate(\n    time = 0,\n    aval = basval,\n    avisit = \"Baseline\"\n  )\n\nall2_lda &lt;- dplyr::bind_rows(all2, base) %&gt;% \n  dplyr::mutate(\n    avisit = forcats::fct_reorder(avisit, time)\n  )\n\n### Check Order of avisit levels:\nlevels(all2_lda$avisit)\n\n[1] \"Baseline\" \"Week 2\"   \"Week 4\"   \"Week 8\"  \n\n\nWe can now fit a model, including aval as a response variable, treatment (group), visit (avisit) and a treatment-by-time interaction term:\n\nlda &lt;- mmrm(\n  formula = aval ~ group*avisit + us(avisit | subject),\n  data = all2_lda,\n  control = mmrm_control(method = \"Kenward-Roger\")\n)\n\nThe LS Mean estimates per treatment arm for mean changes to Week 8 (Time 3) are now obtained via contrasts between Week 3 and Baseline:\n\nlsmns &lt;- emmeans(lda, ~group*avisit, weights = \"proportional\")\ncontrast(\n  lsmns,\n  method = list(\n    \"LS Means for Change from Baseline to Week 8 Treatment 1\" = c(-1, 0, 0, 0, 0, 0, 1, 0),\n    \"LS Means for Change from Baseline to Week 8 Treatment 2\" = c(0, -1, 0, 0, 0, 0, 0, 1),\n    \"LS Means for Difference in Changes to Week 8 btw. Treatment 2 and Treatment 1\" = c(1, -1, 0, 0, 0, 0, -1, 1)\n  ), \n  adjust = NULL\n)\n\n contrast                                                                     \n LS Means for Change from Baseline to Week 8 Treatment 1                      \n LS Means for Change from Baseline to Week 8 Treatment 2                      \n LS Means for Difference in Changes to Week 8 btw. Treatment 2 and Treatment 1\n estimate   SE df t.ratio p.value\n    -9.88 1.01 48  -9.768  &lt;.0001\n   -13.24 1.01 48 -13.089  &lt;.0001\n    -3.36 1.43 48  -2.349  0.0230\n\n\nA note on caveats associated with LDA models:\n\nIn cases where the treatment effect has a rapid onset, the linearity assumption underlying the model is violated.\nUse of baseline as a response, as opposed to a covariate, ignores the predictive nature of baseline severity as an explanatory factor in the residual error.\n\nGenerally, LDA models can be very useful in trials with only very few visits per patient due to the additional response value being included. In longer trials however, it is recommended to refrain from their use for the disadvantages stated above. In this case, a decent data quality is key to avoid missing baseline data (if possible completely) and reduce the degree of missingness with regards to follow-up data as much as possible."
  },
  {
    "objectID": "s2_inference_continuous.html#addendum-on-linear-mixed-effect-models",
    "href": "s2_inference_continuous.html#addendum-on-linear-mixed-effect-models",
    "title": "Inference from Longitudinal Data",
    "section": "",
    "text": "In this chapter we have dealt with models where the response is modeled as a linear combination of fixed effect parameters \\(\\beta\\) and a random error \\(\\varepsilon\\)\n\\[\ny = X\\beta\\,+\\,\\varepsilon\\,.\n\\]\nThe fixed effects in this model represent the population effects and we used the random error to model the subject-specific influences. Although we used the term mixed model for repeated measures (MMRM), this nomenclature is misleading in the way that our model does not truly deserve the term mixed. A true mixed model would require the involvement of fixed and random effects. The latter have previously been omitted.\nWhile we will not cover random coefficient models (also known as random slope and intercept models or RS&I models) in depth in this class, we would like to point to couple of useful features. For further reading, one can refer to Chapter 8 in (Fitzmaurice 2011).\nThe distinction between fixed and random effects in linear mixed effect models allows for modeling of both between-subject and within-subject variations. In random coefficient models (i.e. MMRMs with a non-trivial random effect) each subject is assumed to have their own (linear) rate of response over time, expressed as random slopes and intercepts.\n“In addition it is not only possible to estimate parameters that describe how the mean response changes in the population of interest, it is also possible to predict how individual response trajectories change over time. For example, linear mixed effects models can be used to obtain predictions of individual growth trajectories over time.” (Fitzmaurice 2011)\nLinear mixed effects models therefore allow for inferences on the individual (subject) basis rather than the entirety of individuals (population).\nAnother advantage of linear mixed models is their flexibility with respect to imbalances in longitudinal data. We are no longer bound by the restriction to have (approximately) the same number of observations per subject, i.e. the approximately the same length of follow-up, or even for the visits to be taken at the same times. This feature is especially useful whenever we are dealing with parallel design studies, involving the comparison of interventions with different dosing/ assessment frequencies.\nNote that the mmrm package so far does not allow for fitting of linear mixed effect models, in the sense that an actual random effects term is included in the model formula. For these kind of models, we point to the package lme4 (Bates et al. 2015)."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Introduction",
    "section": "",
    "text": "Authors\n\nDr. Marietta Kirchner, Institute of Medical Biometry, Heidelberg University\nDr. Alexandra Lauer, Boehringer Ingelheim Pharma GmbH & Co. KG\n\nPublished\n\nSys.Date()\n\n[1] \"2024-09-19\"\n\n\n\n\nThis class focuses on the longitudinal modeling of data from Patient Reported Outcomes (PROs). It is meant to be hands-on class with applications in R.\nContent and structure follow the book by (Mallinckrodt and Lipkovich 2016). We would like to extend our warmest gratitude towards Dr. Mallinckrodt for providing the example data for the workshop.\nThe following topics will be covered:\n\nWelcome and Introduction (WS session 1)\nExploration and visualization of longitudinal data (WS session 1/2)\nInferences from longitudinal data (WS session 3 + 4)\nAssessment of missingness patterns (WS session 5)\nSensitivity analyses to assess the impact of missingness (WS session 6)\nAnnex: Inferences from longitudinal binary data (WS session 7)\n\n\n\n\nThis workshop focuses on the analysis of data observed in randomized clinical trials (RCTs). Here, patients have assessments taken at the start of their treatment and then subsequently throughout the course of the trial based on a pre-specified schedule of assessments. The measurement at the start of the treatment is usually referred to as the baseline.\nResearchers can be interested in\n\nthe occurrence of a certain event during the course of the trial, e.g. death or a cardiac event, or the time to the occurrence of such an event, or\nthe longitudinal profile from multiple repeated measurements taken, with a focus on either estimates at a landmark visit or across several time points.\n\nThe outcomes under point 1 can be handled via a comparison of the percentages of patients with events between treatment arms, or a time-to-event analysis. Both are out of scope of this workshop.\n\n\n\nIf you are not used to working with R and RStudio so far, we recommend for you to familiarize yourself with the following useful content:\n\nRStudio User Guide\nRStudio Cheatsheet\nThe following two cheatsheets for dplyr (data wrangling) and ggplot2 (plotting and visualizations)\nThis video about Quarto"
  },
  {
    "objectID": "index.html#workshop-structure",
    "href": "index.html#workshop-structure",
    "title": "Introduction",
    "section": "",
    "text": "This class focuses on the longitudinal modeling of data from Patient Reported Outcomes (PROs). It is meant to be hands-on class with applications in R.\nContent and structure follow the book by (Mallinckrodt and Lipkovich 2016). We would like to extend our warmest gratitude towards Dr. Mallinckrodt for providing the example data for the workshop.\nThe following topics will be covered:\n\nWelcome and Introduction (WS session 1)\nExploration and visualization of longitudinal data (WS session 1/2)\nInferences from longitudinal data (WS session 3 + 4)\nAssessment of missingness patterns (WS session 5)\nSensitivity analyses to assess the impact of missingness (WS session 6)\nAnnex: Inferences from longitudinal binary data (WS session 7)"
  },
  {
    "objectID": "index.html#longitudinal-data",
    "href": "index.html#longitudinal-data",
    "title": "Introduction",
    "section": "",
    "text": "This workshop focuses on the analysis of data observed in randomized clinical trials (RCTs). Here, patients have assessments taken at the start of their treatment and then subsequently throughout the course of the trial based on a pre-specified schedule of assessments. The measurement at the start of the treatment is usually referred to as the baseline.\nResearchers can be interested in\n\nthe occurrence of a certain event during the course of the trial, e.g. death or a cardiac event, or the time to the occurrence of such an event, or\nthe longitudinal profile from multiple repeated measurements taken, with a focus on either estimates at a landmark visit or across several time points.\n\nThe outcomes under point 1 can be handled via a comparison of the percentages of patients with events between treatment arms, or a time-to-event analysis. Both are out of scope of this workshop."
  },
  {
    "objectID": "index.html#basics-about-rstudio-pre-read",
    "href": "index.html#basics-about-rstudio-pre-read",
    "title": "Introduction",
    "section": "",
    "text": "If you are not used to working with R and RStudio so far, we recommend for you to familiarize yourself with the following useful content:\n\nRStudio User Guide\nRStudio Cheatsheet\nThe following two cheatsheets for dplyr (data wrangling) and ggplot2 (plotting and visualizations)\nThis video about Quarto"
  },
  {
    "objectID": "s1_visualization.html",
    "href": "s1_visualization.html",
    "title": "Longitudinal Data Exploration and Visualization",
    "section": "",
    "text": "Data on individuals followed over time with information collected at several time points.\nClusters are the individuals who are followed over time.\nRepeated observations may or may not be taken at regular times (balanced, fixed occasions, do not differ between subjects).\nOur interest is in the change from baseline.\n\nDatasets used in this course:\n\nExample data is taken from (Mallinckrodt and Lipkovich 2016). The authors generated data sets based on two nearly identically designed antidepressant clinical trials by randomly selecting subjects from the original data.\nContain data on the continuous variable HAMD17 (Hamilton 17-item rating scale for depression).\nTwo treatement arms are included: placebo (arm 1) vs. drug (arm 2).\nAssessments were taken at baseline and weeks 1, 2, 4, 6, and 8.\n\nThere are 3 data sets created from the original data:\n\nData all2 = Subsample of the large dataset with n=50, visits: weeks 2, 4, 8.\nData high2 = Large dataset with n=100, high dropout = 70% (drug), 60% (placebo).\nData low2 = Large dataset with n=100, low dropout = 18%.\n\nWe are mainly working with the all2 data set in the following. There is one application on the high2 data set. We are not considering the low2 data set.\n\n\n\n\nSmall data set with n=50 subjects.\n1st version: complete data where all subjects adhered to the originally assigend study medication, variable change\n2nd version = missing data: identical to the first except some data were missing (drop-out), variable chgdrop\n\nLooking at the variables in the data set\n\nhead(all2)\n\n# A tibble: 6 × 14\n  subject  time chgdrop trt   basval change pgiimp gender chgrescue dropout_grp \n  &lt;fct&gt;   &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt; &lt;chr&gt;      &lt;dbl&gt; &lt;chr&gt;       \n1 1           1     -11 2         24    -11      3 F            -11 Week 2 Drop…\n2 1           2      NA 2         24    -16      2 F            -26 Week 2 Drop…\n3 1           3      NA 2         24    -24      2 F            -34 Week 2 Drop…\n4 2           1      -6 1         20     -6      4 F             -6 Week 2 Drop…\n5 2           2      NA 1         20     -8      4 F            -18 Week 2 Drop…\n6 2           3      NA 1         20     -5      5 F            -15 Week 2 Drop…\n# ℹ 4 more variables: aval &lt;dbl&gt;, avisit &lt;fct&gt;, week &lt;dbl&gt;, group &lt;fct&gt;\n\n\n\n\nOnly consider the complete data, variable change\n\nAre the data balanced and equally spaced?\nNumber of observations by week? - Summary statistics for HAMD17 (change from baseline) by week.\nPlot trajectories for each individual, different colors for each treatment group (or panels).\nAdd mean to your plot or generate new plot with mean change from baseline by treatment group.\nPlot mean change from baseline for each treatment group stratified by sex. Comment on the plot.\n\n\n\n\nTable: Summary statistics mean (SD) for HAMD17 by treatment and week in the all2 data set\n\nall2 %&gt;%\n  select(change, group, avisit) %&gt;%\n  tbl_strata(strata=group, \n             ~.x %&gt;% \n               tbl_summary(by = avisit,\n                           statistic = list(\n      all_continuous() ~ \"{mean} ({sd})\"), \n      digits = all_continuous() ~ 2 ) %&gt;%\n      modify_header(label = \"**Variable**\")\n)\n\n\n\n\n\n  \n    \n    \n      Variable\n      \n        Arm 1\n      \n      \n        Arm 2\n      \n    \n    \n      Week 2, N = 251\n      Week 4, N = 251\n      Week 8, N = 251\n      Week 2, N = 251\n      Week 4, N = 251\n      Week 8, N = 251\n    \n  \n  \n    change\n-4.20 (3.66)\n-6.80 (4.25)\n-9.88 (4.85)\n-5.24 (5.49)\n-8.60 (5.39)\n-13.24 (5.54)\n  \n  \n  \n    \n      1 Mean (SD)\n    \n  \n\n\n\n\nFigure: individual trajectories stratified by treatment group\n\nggplot(data = all2, aes(x = week, y = change, group=subject)) +\n  geom_point() + geom_line() + facet_grid(.~group) + ylab(\"Change from baseline HAMD17\") +\n  scale_x_continuous(name=\"Visit [week]\", breaks=c(2,4,8))\n\n\n\n\nFigure 1: Individual trajectories of HAMD17 by treatment group\n\n\n\n\nFigure: Mean change from baseline for each treatment group\n\nggplot(data = all2, aes(x = week, y = change)) +  \n  geom_point(aes(colour=factor(group))) + ylab(\"Change from baseline HAMD17\") +\n  scale_x_continuous(name=\"Visit [week]\", breaks=c(2,4,8)) +\n  stat_summary(aes(group = group, colour=factor(group)), geom = \"line\", fun.y = mean,\n               size = 1) +\n  stat_summary(aes(group = group, colour=factor(group)), geom = \"point\", fun.y = mean,\n               shape=17,size = 2)\n\n\n\n\nFigure 2: Mean HAMD17 change from baseline by treatment group\n\n\n\n\nFrequency for sex per treatment group\n\nall2 %&gt;% filter(time==1) %&gt;%\n  tbl_summary(\n    include = c(gender),\n    by = group\n  )\n\n\n\n\n\n  \n    \n    \n      Characteristic\n      Arm 1, N = 251\n      Arm 2, N = 251\n    \n  \n  \n    PATIENT SEX\n\n\n        F\n10 (40%)\n19 (76%)\n        M\n15 (60%)\n6 (24%)\n  \n  \n  \n    \n      1 n (%)\n    \n  \n\n\n\n\nFigure: Mean change from baseline stratified by sex\n\nggplot(data = all2, aes(x = week, y = change)) +  facet_grid(.~gender) +\n  geom_point(aes(colour=factor(group))) + ylab(\"Change from baseline HAMD17\") +\n  scale_x_continuous(name=\"Visit [week]\", breaks=c(2,4,8)) +\n  stat_summary(aes(group = group, colour=factor(group)), geom = \"line\", fun.y = mean,\n               size = 1) +\n  stat_summary(aes(group = group, colour=factor(group)), geom = \"point\", fun.y = mean,\n               shape=17,size = 2)\n\n\n\n\nFigure 3: Mean HAMD17 change from baseline by treatment group stratified by sex\n\n\n\n\n\n\n\n\n2nd version = missing data: identical to the first except some data were missing (drop-out), variable chgdrop\nThis version is later relevant when considering missing data. Thus, have a short look at the data.\n\nTable: Summary statistics for HAMD17 by treatment and week in the all2 data set with drop-outs\n\nall2 %&gt;%\n  select(chgdrop, group, avisit) %&gt;%\n  tbl_strata(strata=group, \n             ~.x %&gt;% \n               tbl_summary(by = avisit,\n                           statistic = list(\n      all_continuous() ~ \"{mean} ({sd})\"), \n      digits = all_continuous() ~ 2 ) %&gt;%\n      modify_header(label = \"**Variable**\")\n)\n\n\n\n\n\n  \n    \n    \n      Variable\n      \n        Arm 1\n      \n      \n        Arm 2\n      \n    \n    \n      Week 2, N = 251\n      Week 4, N = 251\n      Week 8, N = 251\n      Week 2, N = 251\n      Week 4, N = 251\n      Week 8, N = 251\n    \n  \n  \n    chgdrop\n-4.20 (3.66)\n-6.80 (4.63)\n-10.17 (4.88)\n-5.24 (5.49)\n-8.14 (5.27)\n-13.11 (5.44)\n        Unknown\n0\n5\n7\n0\n3\n6\n  \n  \n  \n    \n      1 Mean (SD)\n    \n  \n\n\n\n\nFigure: Mean change from baseline for each treatment group in the all2 data set with drop-outs\n\nggplot(data = all2, aes(x = week, y = chgdrop)) +  \n  geom_point(aes(colour=factor(group))) + ylab(\"Change from baseline HAMD17\") +\n  scale_x_continuous(name=\"Visit [week]\", breaks=c(2,4,8)) +\n  stat_summary(aes(group = group, colour=factor(group)), geom = \"line\", fun.y = mean,\n               size = 1) +\n  stat_summary(aes(group = group, colour=factor(group)), geom = \"point\", fun.y = mean,\n               shape=17,size = 2)\n\n\n\n\nFigure 4: Mean HAMD17 change from baseline by treatment group\n\n\n\n\n\n\n\n\n\nLarge data set with n=100 subjects.\nNote that we have no intermittent missing values but drop-outs.\n\nLooking at the variables in the data set.\n\nhead(high2)\n\n# A tibble: 6 × 16\n# Groups:   patient [2]\n  patient trt   poolinv basval  week change pgiimp   age gender  drop .groups\n    &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;    &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;  &lt;dbl&gt; &lt;chr&gt;  \n1    1401 1     005         19     1     -7      3  44.5 F          2 drop   \n2    1401 1     005         19     2     -4      3  44.5 F          2 drop   \n3    1411 2     005         17     1      0      3  35.7 F          8 drop   \n4    1411 2     005         17     2     -2      3  35.7 F          8 drop   \n5    1411 2     005         17     4      2      3  35.7 F          8 drop   \n6    1411 2     005         17     6     -3      2  35.7 F          8 drop   \n# ℹ 5 more variables: aval &lt;dbl&gt;, group &lt;fct&gt;, avisit &lt;fct&gt;, dropout_grp &lt;fct&gt;,\n#   subject &lt;fct&gt;\n\n\n\n\n\nExplore the drop-outs e.g. number of observations by week.\nSummary statistics for HAMD17 change.\nGenerate and interpret the group-wise boxplots of the change from baseline.\nMean change from baseline for different drop-out groups (by treatment). Comment on the plot.\n\n\n\n\nTable: Summary statistics for HAMD17 by treatment and week in the high2 data set\n\nhigh2 %&gt;% ungroup() %&gt;%\n  select(change, group, avisit) %&gt;%\n  tbl_strata(strata=group, \n             ~.x %&gt;% \n               tbl_summary(by = avisit,\n                           statistic = list(\n                             all_continuous() ~ \"{mean} ({sd})\"), \n                           digits = all_continuous() ~ 2 ) %&gt;%\n                modify_header(label = \"**Variable**\")\n  )\n\n\n\n\n\n  \n    \n    \n      Variable\n      \n        Arm 1\n      \n      \n        Arm 2\n      \n    \n    \n      Week 1, N = 1001\n      Week 2, N = 921\n      Week 4, N = 851\n      Week 6, N = 731\n      Week 8, N = 601\n      Week 1, N = 1001\n      Week 2, N = 901\n      Week 4, N = 851\n      Week 6, N = 751\n      Week 8, N = 701\n    \n  \n  \n    change\n-1.49 (3.91)\n-3.16 (5.69)\n-4.51 (6.23)\n-5.51 (6.16)\n-6.58 (5.99)\n-1.84 (5.58)\n-4.30 (6.82)\n-6.47 (6.84)\n-8.29 (6.96)\n-8.99 (7.04)\n  \n  \n  \n    \n      1 Mean (SD)\n    \n  \n\n\n\n\nFigure: Distribution of HAMD17 change from baseline\n\nggplot(data = high2, aes(x = avisit, y = change, fill=group)) + \n  geom_boxplot() + ylab(\"Change from baseline HAMD17\") + xlab(\"Visit\")\n\n\n\n\nFigure 5: Distribution of HAMD17 change from baseline by treatment group at each visit\n\n\n\n\nFigure: Mean HAMD17 changes by drop-out group\n\nggplot(data = high2, aes(x = week, y = change, group=patient)) + \n  geom_point(col=\"lightgray\") + geom_line(col=\"lightgray\") + facet_grid(.~group) +\n  ylab(\"Change from baseline HAMD17\") + scale_x_continuous(name=\"Visit [week]\", breaks=c(1,2,4,6,8)) +\n  stat_summary(aes(group = dropout_grp, colour=factor(dropout_grp)), geom = \"line\", fun.y = mean,\n               size = 1) +\n  stat_summary(aes(group = dropout_grp, colour=factor(dropout_grp)), geom = \"point\", fun.y = mean,\n               shape=17,size = 2)\n\n\n\n\nFigure 6: Visit-wise mean HAMD17 changes from baseline by treatment group and drop-out"
  },
  {
    "objectID": "s1_visualization.html#introduction",
    "href": "s1_visualization.html#introduction",
    "title": "Longitudinal Data Exploration and Visualization",
    "section": "",
    "text": "Data on individuals followed over time with information collected at several time points.\nClusters are the individuals who are followed over time.\nRepeated observations may or may not be taken at regular times (balanced, fixed occasions, do not differ between subjects).\nOur interest is in the change from baseline.\n\nDatasets used in this course:\n\nExample data is taken from (Mallinckrodt and Lipkovich 2016). The authors generated data sets based on two nearly identically designed antidepressant clinical trials by randomly selecting subjects from the original data.\nContain data on the continuous variable HAMD17 (Hamilton 17-item rating scale for depression).\nTwo treatement arms are included: placebo (arm 1) vs. drug (arm 2).\nAssessments were taken at baseline and weeks 1, 2, 4, 6, and 8.\n\nThere are 3 data sets created from the original data:\n\nData all2 = Subsample of the large dataset with n=50, visits: weeks 2, 4, 8.\nData high2 = Large dataset with n=100, high dropout = 70% (drug), 60% (placebo).\nData low2 = Large dataset with n=100, low dropout = 18%.\n\nWe are mainly working with the all2 data set in the following. There is one application on the high2 data set. We are not considering the low2 data set."
  },
  {
    "objectID": "s1_visualization.html#data-set-all2",
    "href": "s1_visualization.html#data-set-all2",
    "title": "Longitudinal Data Exploration and Visualization",
    "section": "",
    "text": "Small data set with n=50 subjects.\n1st version: complete data where all subjects adhered to the originally assigend study medication, variable change\n2nd version = missing data: identical to the first except some data were missing (drop-out), variable chgdrop\n\nLooking at the variables in the data set\n\nhead(all2)\n\n# A tibble: 6 × 14\n  subject  time chgdrop trt   basval change pgiimp gender chgrescue dropout_grp \n  &lt;fct&gt;   &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt; &lt;chr&gt;      &lt;dbl&gt; &lt;chr&gt;       \n1 1           1     -11 2         24    -11      3 F            -11 Week 2 Drop…\n2 1           2      NA 2         24    -16      2 F            -26 Week 2 Drop…\n3 1           3      NA 2         24    -24      2 F            -34 Week 2 Drop…\n4 2           1      -6 1         20     -6      4 F             -6 Week 2 Drop…\n5 2           2      NA 1         20     -8      4 F            -18 Week 2 Drop…\n6 2           3      NA 1         20     -5      5 F            -15 Week 2 Drop…\n# ℹ 4 more variables: aval &lt;dbl&gt;, avisit &lt;fct&gt;, week &lt;dbl&gt;, group &lt;fct&gt;\n\n\n\n\nOnly consider the complete data, variable change\n\nAre the data balanced and equally spaced?\nNumber of observations by week? - Summary statistics for HAMD17 (change from baseline) by week.\nPlot trajectories for each individual, different colors for each treatment group (or panels).\nAdd mean to your plot or generate new plot with mean change from baseline by treatment group.\nPlot mean change from baseline for each treatment group stratified by sex. Comment on the plot.\n\n\n\n\nTable: Summary statistics mean (SD) for HAMD17 by treatment and week in the all2 data set\n\nall2 %&gt;%\n  select(change, group, avisit) %&gt;%\n  tbl_strata(strata=group, \n             ~.x %&gt;% \n               tbl_summary(by = avisit,\n                           statistic = list(\n      all_continuous() ~ \"{mean} ({sd})\"), \n      digits = all_continuous() ~ 2 ) %&gt;%\n      modify_header(label = \"**Variable**\")\n)\n\n\n\n\n\n  \n    \n    \n      Variable\n      \n        Arm 1\n      \n      \n        Arm 2\n      \n    \n    \n      Week 2, N = 251\n      Week 4, N = 251\n      Week 8, N = 251\n      Week 2, N = 251\n      Week 4, N = 251\n      Week 8, N = 251\n    \n  \n  \n    change\n-4.20 (3.66)\n-6.80 (4.25)\n-9.88 (4.85)\n-5.24 (5.49)\n-8.60 (5.39)\n-13.24 (5.54)\n  \n  \n  \n    \n      1 Mean (SD)\n    \n  \n\n\n\n\nFigure: individual trajectories stratified by treatment group\n\nggplot(data = all2, aes(x = week, y = change, group=subject)) +\n  geom_point() + geom_line() + facet_grid(.~group) + ylab(\"Change from baseline HAMD17\") +\n  scale_x_continuous(name=\"Visit [week]\", breaks=c(2,4,8))\n\n\n\n\nFigure 1: Individual trajectories of HAMD17 by treatment group\n\n\n\n\nFigure: Mean change from baseline for each treatment group\n\nggplot(data = all2, aes(x = week, y = change)) +  \n  geom_point(aes(colour=factor(group))) + ylab(\"Change from baseline HAMD17\") +\n  scale_x_continuous(name=\"Visit [week]\", breaks=c(2,4,8)) +\n  stat_summary(aes(group = group, colour=factor(group)), geom = \"line\", fun.y = mean,\n               size = 1) +\n  stat_summary(aes(group = group, colour=factor(group)), geom = \"point\", fun.y = mean,\n               shape=17,size = 2)\n\n\n\n\nFigure 2: Mean HAMD17 change from baseline by treatment group\n\n\n\n\nFrequency for sex per treatment group\n\nall2 %&gt;% filter(time==1) %&gt;%\n  tbl_summary(\n    include = c(gender),\n    by = group\n  )\n\n\n\n\n\n  \n    \n    \n      Characteristic\n      Arm 1, N = 251\n      Arm 2, N = 251\n    \n  \n  \n    PATIENT SEX\n\n\n        F\n10 (40%)\n19 (76%)\n        M\n15 (60%)\n6 (24%)\n  \n  \n  \n    \n      1 n (%)\n    \n  \n\n\n\n\nFigure: Mean change from baseline stratified by sex\n\nggplot(data = all2, aes(x = week, y = change)) +  facet_grid(.~gender) +\n  geom_point(aes(colour=factor(group))) + ylab(\"Change from baseline HAMD17\") +\n  scale_x_continuous(name=\"Visit [week]\", breaks=c(2,4,8)) +\n  stat_summary(aes(group = group, colour=factor(group)), geom = \"line\", fun.y = mean,\n               size = 1) +\n  stat_summary(aes(group = group, colour=factor(group)), geom = \"point\", fun.y = mean,\n               shape=17,size = 2)\n\n\n\n\nFigure 3: Mean HAMD17 change from baseline by treatment group stratified by sex\n\n\n\n\n\n\n\n\n2nd version = missing data: identical to the first except some data were missing (drop-out), variable chgdrop\nThis version is later relevant when considering missing data. Thus, have a short look at the data.\n\nTable: Summary statistics for HAMD17 by treatment and week in the all2 data set with drop-outs\n\nall2 %&gt;%\n  select(chgdrop, group, avisit) %&gt;%\n  tbl_strata(strata=group, \n             ~.x %&gt;% \n               tbl_summary(by = avisit,\n                           statistic = list(\n      all_continuous() ~ \"{mean} ({sd})\"), \n      digits = all_continuous() ~ 2 ) %&gt;%\n      modify_header(label = \"**Variable**\")\n)\n\n\n\n\n\n  \n    \n    \n      Variable\n      \n        Arm 1\n      \n      \n        Arm 2\n      \n    \n    \n      Week 2, N = 251\n      Week 4, N = 251\n      Week 8, N = 251\n      Week 2, N = 251\n      Week 4, N = 251\n      Week 8, N = 251\n    \n  \n  \n    chgdrop\n-4.20 (3.66)\n-6.80 (4.63)\n-10.17 (4.88)\n-5.24 (5.49)\n-8.14 (5.27)\n-13.11 (5.44)\n        Unknown\n0\n5\n7\n0\n3\n6\n  \n  \n  \n    \n      1 Mean (SD)\n    \n  \n\n\n\n\nFigure: Mean change from baseline for each treatment group in the all2 data set with drop-outs\n\nggplot(data = all2, aes(x = week, y = chgdrop)) +  \n  geom_point(aes(colour=factor(group))) + ylab(\"Change from baseline HAMD17\") +\n  scale_x_continuous(name=\"Visit [week]\", breaks=c(2,4,8)) +\n  stat_summary(aes(group = group, colour=factor(group)), geom = \"line\", fun.y = mean,\n               size = 1) +\n  stat_summary(aes(group = group, colour=factor(group)), geom = \"point\", fun.y = mean,\n               shape=17,size = 2)\n\n\n\n\nFigure 4: Mean HAMD17 change from baseline by treatment group"
  },
  {
    "objectID": "s1_visualization.html#data-set-high2",
    "href": "s1_visualization.html#data-set-high2",
    "title": "Longitudinal Data Exploration and Visualization",
    "section": "",
    "text": "Large data set with n=100 subjects.\nNote that we have no intermittent missing values but drop-outs.\n\nLooking at the variables in the data set.\n\nhead(high2)\n\n# A tibble: 6 × 16\n# Groups:   patient [2]\n  patient trt   poolinv basval  week change pgiimp   age gender  drop .groups\n    &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;    &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;  &lt;dbl&gt; &lt;chr&gt;  \n1    1401 1     005         19     1     -7      3  44.5 F          2 drop   \n2    1401 1     005         19     2     -4      3  44.5 F          2 drop   \n3    1411 2     005         17     1      0      3  35.7 F          8 drop   \n4    1411 2     005         17     2     -2      3  35.7 F          8 drop   \n5    1411 2     005         17     4      2      3  35.7 F          8 drop   \n6    1411 2     005         17     6     -3      2  35.7 F          8 drop   \n# ℹ 5 more variables: aval &lt;dbl&gt;, group &lt;fct&gt;, avisit &lt;fct&gt;, dropout_grp &lt;fct&gt;,\n#   subject &lt;fct&gt;\n\n\n\n\n\nExplore the drop-outs e.g. number of observations by week.\nSummary statistics for HAMD17 change.\nGenerate and interpret the group-wise boxplots of the change from baseline.\nMean change from baseline for different drop-out groups (by treatment). Comment on the plot.\n\n\n\n\nTable: Summary statistics for HAMD17 by treatment and week in the high2 data set\n\nhigh2 %&gt;% ungroup() %&gt;%\n  select(change, group, avisit) %&gt;%\n  tbl_strata(strata=group, \n             ~.x %&gt;% \n               tbl_summary(by = avisit,\n                           statistic = list(\n                             all_continuous() ~ \"{mean} ({sd})\"), \n                           digits = all_continuous() ~ 2 ) %&gt;%\n                modify_header(label = \"**Variable**\")\n  )\n\n\n\n\n\n  \n    \n    \n      Variable\n      \n        Arm 1\n      \n      \n        Arm 2\n      \n    \n    \n      Week 1, N = 1001\n      Week 2, N = 921\n      Week 4, N = 851\n      Week 6, N = 731\n      Week 8, N = 601\n      Week 1, N = 1001\n      Week 2, N = 901\n      Week 4, N = 851\n      Week 6, N = 751\n      Week 8, N = 701\n    \n  \n  \n    change\n-1.49 (3.91)\n-3.16 (5.69)\n-4.51 (6.23)\n-5.51 (6.16)\n-6.58 (5.99)\n-1.84 (5.58)\n-4.30 (6.82)\n-6.47 (6.84)\n-8.29 (6.96)\n-8.99 (7.04)\n  \n  \n  \n    \n      1 Mean (SD)\n    \n  \n\n\n\n\nFigure: Distribution of HAMD17 change from baseline\n\nggplot(data = high2, aes(x = avisit, y = change, fill=group)) + \n  geom_boxplot() + ylab(\"Change from baseline HAMD17\") + xlab(\"Visit\")\n\n\n\n\nFigure 5: Distribution of HAMD17 change from baseline by treatment group at each visit\n\n\n\n\nFigure: Mean HAMD17 changes by drop-out group\n\nggplot(data = high2, aes(x = week, y = change, group=patient)) + \n  geom_point(col=\"lightgray\") + geom_line(col=\"lightgray\") + facet_grid(.~group) +\n  ylab(\"Change from baseline HAMD17\") + scale_x_continuous(name=\"Visit [week]\", breaks=c(1,2,4,6,8)) +\n  stat_summary(aes(group = dropout_grp, colour=factor(dropout_grp)), geom = \"line\", fun.y = mean,\n               size = 1) +\n  stat_summary(aes(group = dropout_grp, colour=factor(dropout_grp)), geom = \"point\", fun.y = mean,\n               shape=17,size = 2)\n\n\n\n\nFigure 6: Visit-wise mean HAMD17 changes from baseline by treatment group and drop-out"
  },
  {
    "objectID": "s1_visualization.html#overview---different-covariance-matrices",
    "href": "s1_visualization.html#overview---different-covariance-matrices",
    "title": "Longitudinal Data Exploration and Visualization",
    "section": "Overview - different covariance matrices",
    "text": "Overview - different covariance matrices\n\nVariance components (VC) independence structure\nCompound symmetry (CS) also known as exchangeable\nToeplitz (TOEP)\nFirst order auto regressive (AR(1))\nUnstructured (UN)\n\nSelected covariance structures for data with three assessment times (t=3) are shown below. Note that with three assessment times, the number of parameters estimated for the various structures did not differ as much as would be the case with more assessment times. Thus, results from different covariance structures are more similar than would be the case with more assessment times.\n\nIndependence structure (VC)\nConstant variance. It is assumed to be no correlation between assessments (residuals are independent across time). \\[ R = \\begin{bmatrix}\n   \\sigma^2   & 0  & 0  \\\\\n   0  & \\sigma^2   & 0 \\\\\n   0  & 0  & \\sigma^2\n   \\end{bmatrix}\\]\n\n\nCompound symmetry (CS)\nConstant variance and constant covariance across all assessments. Also known as exchangeable. It requires two parameter estimates. Most simplest repeated measures (i.e., correlated errors) structure.\n\\[ R = \\begin{bmatrix}\n   \\sigma^2 + \\sigma_1 & \\sigma_1  & \\sigma_1  \\\\\n   \\sigma_1  & \\sigma^2 + \\sigma_1  & \\sigma_1  \\\\\n   \\sigma_1  & \\sigma_1  & \\sigma^2 + \\sigma_1\n   \\end{bmatrix}\\]\n\n\nUnstructured (UN)\nThis is the most general (saturated) model. It has t + [t(t-1)/2] parameters to be estimated. Here it is 3 + 3 = 6 parameters.\n\\[ R = \\begin{bmatrix}\n   \\sigma_1^2 & \\sigma_{21}  & \\sigma_{31}  \\\\\n   \\sigma_{21}  & \\sigma_2^2   & \\sigma_{32}  \\\\\n   \\sigma_{31}  & \\sigma_{32}  & \\sigma_3^2\n   \\end{bmatrix}\\]\n\n\nToeplitz structure (TOEP)\nHomogenous variances and heterogenous correlations. Same correlation value is used whenever the degree of adjacency is the same e.g. correlation between times 1 and 2 = correlation between times 2 and 3. Repeated measurements are assumed to be equally spaced. TOEP requries t parameter estimates so here we have t=3 parameter.\n\\[ R = \\begin{bmatrix}\n   \\sigma^2  & \\sigma_1^2 & \\sigma_2^2 \\  \\\\\n   \\sigma_1^2 & \\sigma^2  & \\sigma_1^2  \\\\\n   \\sigma_2^2  & \\sigma_1^2 & \\sigma^2\n   \\end{bmatrix}\\]\n\n\nAutoregressive structure (AR(1))\nCorrelation decreases as time between observations increases. Assumtpion of equal spacing between each repeated measurement must be reasonably applicable. This structure requires the estimation of two parameters.\n\\[ R = \\begin{bmatrix}\n   \\sigma^2  & \\sigma^2 \\rho  & \\sigma^2 \\rho^2  \\\\\n   \\sigma^2 \\rho & \\sigma^2   & \\sigma^2 \\rho  \\\\\n  \\sigma^2 \\rho^2  & \\sigma^2 \\rho  & \\sigma^2\n   \\end{bmatrix}\\]\n\n\nSpatial Power (SP)\nSpatial covariance structures does not require equal spacing between measurements. Instead, as long as the distance between visits can be quantified in terms of time and/or other coordinates, the spatial covariance structure can be applied. Covariances are mathematical functions of Euclidean distances between observed measurements. Again, two parameters need to be estimated.\nFor spatial exponential, the covariance structure is defined as follows:\n\\[ R = \\begin{bmatrix}\n   \\sigma^2  & \\sigma^2 \\rho_{12}  & \\sigma^2 \\rho_{13}  \\\\\n   \\sigma^2 \\rho_{21} & \\sigma^2   & \\sigma^2 \\rho_{23}  \\\\\n  \\sigma^2 \\rho_{31}  & \\sigma^2 \\rho_{32}  & \\sigma^2\n   \\end{bmatrix}\\]\nwith \\[ \\rho_{ij}=\\rho^{d_{ij}} \\] where \\[d_{ij} \\] is the distance between time point i and time point j e.g. distance in weeks."
  },
  {
    "objectID": "s1_visualization.html#selecting-the-covariance-structure",
    "href": "s1_visualization.html#selecting-the-covariance-structure",
    "title": "Longitudinal Data Exploration and Visualization",
    "section": "Selecting the covariance structure",
    "text": "Selecting the covariance structure\nThere are a variety of considerations when selecting the covariance structure:\n\nnumber of parameters\ninterpretation of the structure\nmodel fit\n\nUN is the most flexible (complex) structure and can fail to run especially if one has many repeated measures. Choose a reasonable covaraiance structure which is the best compromise between model fit and complexity. E.g. use AIC as it penalises more complex models."
  },
  {
    "objectID": "s1_visualization.html#task-3---exploration-of-correlation-in-the-data",
    "href": "s1_visualization.html#task-3---exploration-of-correlation-in-the-data",
    "title": "Longitudinal Data Exploration and Visualization",
    "section": "Task 3 - Exploration of correlation in the data",
    "text": "Task 3 - Exploration of correlation in the data\n\nCompute the empirical correlations between measurement timepoints in the all2 data set (e.g. correlation between baseline and post-baseline changes, variable change).\nLooking at these correlations + using your knowledge of the experiment (e.g., spacing of measurements), comment on the suitability of the correlation structures VC, CS, UN, AR(1)."
  },
  {
    "objectID": "s1_visualization.html#task-3---discussion-and-possible-solution",
    "href": "s1_visualization.html#task-3---discussion-and-possible-solution",
    "title": "Longitudinal Data Exploration and Visualization",
    "section": "Task 3 - Discussion and possible solution",
    "text": "Task 3 - Discussion and possible solution\nTable: Correlation and covariance matrix\n\nall2.w &lt;- all2 %&gt;% \n  pivot_wider(id_cols=subject,names_from = time, values_from = c(basval,change)) %&gt;% \n  select(-c(basval_2,basval_3))\n\ncor(all2.w[-1]) \n\n            basval_1   change_1   change_2    change_3\nbasval_1  1.00000000 -0.2636447 -0.3165711 -0.02915138\nchange_1 -0.26364471  1.0000000  0.7557078  0.51502724\nchange_2 -0.31657106  0.7557078  1.0000000  0.71298768\nchange_3 -0.02915138  0.5150272  0.7129877  1.00000000\n\ncov(all2.w[-1])\n\n           basval_1  change_1  change_2   change_3\nbasval_1 16.3330612 -4.955918 -6.253061 -0.6391837\nchange_1 -4.9559184 21.634286 17.179592 12.9967347\nchange_2 -6.2530612 17.179592 23.887755 18.9061224\nchange_3 -0.6391837 12.996735 18.906122 29.4351020"
  },
  {
    "objectID": "s1_visualization.html#taking-a-step-back-consequences-of-ignoring-correlation-among-longitudinal-data",
    "href": "s1_visualization.html#taking-a-step-back-consequences-of-ignoring-correlation-among-longitudinal-data",
    "title": "Longitudinal Data Exploration and Visualization",
    "section": "Taking a step back: Consequences of Ignoring Correlation among Longitudinal Data",
    "text": "Taking a step back: Consequences of Ignoring Correlation among Longitudinal Data\nThis technical detour is motivated by (Fitzmaurice 2011). Let us assume we are only interested in the first two responses in a clinical study, say Visit 1 (Baseline) and Visit 2. Our interest lies in an assessment of mean changes over time (for the sake of simplicity in a single treatment group only), i.e. we wish to estimate\n\\[\n\\hat\\delta := \\hat\\mu_2 - \\hat\\mu_1 = \\frac{1}{N} \\sum_{i=1}^N (Y_{i2} - Y_{i1})\\,,\n\\]\nwhere \\(Y_{i1}\\) and \\(Y_{i2}\\) are observations from subject \\(i\\) at Visit 1 and Visit 2, respectively. To obtain the standard error (SE) and get a notion of variability, we compute the variance of \\(\\hat\\delta\\) and see that\n\\[\n\\text{Var}(\\hat\\delta) = \\text{Var}\\left(\\frac{1}{N} \\sum_{i=1}^N (Y_{i2} - Y_{i1})\\right) = \\frac{1}{N} (\\sigma_1^2 + \\sigma_2^2 - 2\\sigma_{12})\\,.\n\\]\nThe inclusion of the term \\(- 2\\sigma_{12}\\) accounts for the correlation between responses at Visit 1 and Visit 2. As data from adjacent visits is usually positively correlated, the omission of the correlation term leads to an overestimation of the variance and thus the SE associated with the treatment effect."
  },
  {
    "objectID": "s3_missingness.html",
    "href": "s3_missingness.html",
    "title": "Missing Data",
    "section": "",
    "text": "So far, we conducted all our analyses on the basis of complete data. This is a blissful, yet highly unusual setting.\nWe use the following definition for missing data, borrowed from (Roderick JA Little 2019):\n“Missing data are unobserved values that would be meaningful for analysis if observed; in other words, a missing value hides a meaningful value.”\nWe distinguish the following patterns of missingness:\n\nMonotonic missingness/ dropout: All values by a subject after a certain time are missing. More specifically, if responses are missing at visit \\(n \\in \\mathbb{N}\\), then responses are also missing for every subsequent visit \\(n + m\\), for all \\(m \\in \\mathbb{N}\\). Example: Subject drop-out from the clinical study.\nIntermittend missingness: Subjects miss one or several visits, but return for later visits. Example: A subject with data collected at baseline and Time 1 (Week 2), a missing value at Time 2 (Week 4) and a non-missing value at Time 3 (Week 8).\n\nNote that, following the nomenclature introduced by (Roderick JA Little 2019), we use the term missing data pattern, to describe which data are missing in the data matrix of subject responses, and the term missing data mechanism, which describes the relationship between missing and observed values in the subject responses.\nOur dataset contains a second variable chgdrop, which is subject to missingness. Let’s rerun our initial MMRM with chgdrop as dependent variable, baseline value, visit, baseline by visit interaction and treatment by visit interaction as fixed effects and an unstructured covariance matrix for visits within each subject.\nThis formulation is very similar to the one at the beginning of the former chapter. How do the results differ in terms of LS Means of change from baseline by treatment arm over time?\n\nfit_cat_time &lt;- mmrm::mmrm(\n  formula = chgdrop ~ basval*avisit + trt*avisit + us(avisit | subject),\n  data = all2,\n  control = mmrm_control(method = \"Kenward-Roger\")\n)\n\n# summary(fit_cat_time)\n\nmodel_lsmeans &lt;- emmeans::emmeans(fit_cat_time, ~trt*avisit, weights = \"proportional\")\nmodel_lsmeans\n\n trt avisit emmean    SE   df lower.CL upper.CL\n 1   Week 2  -4.10 0.900 47.0    -5.91    -2.29\n 2   Week 2  -5.29 0.899 47.0    -7.10    -3.48\n 1   Week 4  -6.42 0.974 46.5    -8.38    -4.46\n 2   Week 4  -8.52 0.951 44.8   -10.43    -6.60\n 1   Week 8  -9.73 1.142 40.4   -12.03    -7.42\n 2   Week 8 -12.62 1.114 40.1   -14.88   -10.37\n\nConfidence level used: 0.95 \n\nemmeans::emmeans(fit_cat_time, ~trt*avisit, weights = \"proportional\") %&gt;% \n  contrast(\n    list(\n      \"Difference in LS Means at Week 8\" = c(0, 0, 0, 0, -1, 1),\n      \"Difference in longitudinal LS Means to Week 8\" = c(-1, 1, -1, 1, -1, 1)/3\n    )\n  )\n\n contrast                                      estimate   SE   df t.ratio\n Difference in LS Means at Week 8                 -2.90 1.60 40.3  -1.814\n Difference in longitudinal LS Means to Week 8    -2.06 1.23 46.8  -1.671\n p.value\n  0.0772\n  0.1014\n\n\nTo understand the nature of the differences between the model using change as a response variable and the one with chgdrop, we need to look closer into the extent of missing data and understand its nature.\n\n\nTo understand the nature of missing data in our clinical trial, we consider the following taxonomy, introduced by (Roderick JA Little 2019). We differentiate between the following three types of missing data:\n\nMissing Completely at Random (MCAR): Conditional on all covariates in our analysis, the probability of missingness does not depend on either observed or unobserved values of the response variable.\nMissing at Random (MAR): Conditional on all covariates and observed response values in our analysis, the probability of missingness does not depend on the unobserved values of the response variable.\nMissing not at Random (MNAR): Conditional on all covariates and observed response values in our analysis, the probability of missingness does depend on the unobserved values of the response variable.\n\n(Mallinckrodt and Lipkovich 2016) give the following interpretation around the three types of missingness:\n“With MCAR, the outcome variable is not related to the probability of dropout (after taking into account covariates). In MAR, the observed values of the outcome variable are related to the probability of dropout, but the unobserved outcomes are not (after taking into account covariates and observed outcomes). In MNAR the unobserved outcomes are related to the probability of dropout even after the observed outcomes and covariates have been taken into account.”\nThe following two sections outline handling strategies for missing data. However, the best approach to handle missing data is to minimise its extent. While the occurence of missing data can rarely be avoided at all (think about the collection of questionnaire data in oncology studies and the missing data after subjects die), it is important to pursue an “as complete as can be” data collection.\nBaseline and screening data are of utmost importance in a pursuit of data completeness. If a screening value is missing, but was meant to be used as a covariate, this subjects’ whole data will be dropped from the analysis even if all responses were observed. If the baseline response variable was missing we are unable to compute a change from baseline, which also leads to the loss of this subjects’ data in the model (although LDA models are still able to provide an estimate) even if all post-baseline values were observed.\n\n\n\nTo gain an understanding of the impact of missingness on the average response trajectories, we can plot the mean changes from baseline by visit for each drop-out group. The three drop-out groups (variable dropout_grp) are:\n\nDrop-outs at Week 2: Subjects who completed baseline and Week 2, but discontinued from the study prior to Week 4.\nDrop-outs at Week 4: Subjects who completed baseline, Week 2 and Week 4, but discontinued from the study prior to Week 8.\nCompleters: Subjects who completed all visits in the study.\n\n\n\n\n\n\nExercise: Try to interpret the plot above and discuss the following topics around missingness:\n\nLook into the data. Which missing data pattern is present in this dataset?\nWhat can be seen in the plot? How does the drop-out time affect the observed mean response trajectories?\nWhat other aspects, apart from response, could influence a subjects’ likelihood to drop-out from the study?\nWhich other summaries/ visualizations can be useful to characterize and monitor the degree of missingness in clinical study data?\n\nSolution:\n\n### Work with code chunks to find the solution to the exercises\n\n\n\n\nThis section provides an overview of simple and most of the times overly naive methods to deal with missing data. Although we will introduce more suitable methods in the next chapter, the approaches introduced in this section have gained questionable popularity in the past, which is why we introduce them here. The following methods to compute or completely ignore missing data exist:\n\nComplete Case Analysis: Discard all subjects with missing observations and only conduct the analysis on subjects with complete follow-up data.\nLast observation carried forward (LOCF): Handling of monotonic missing data. The missing visits are imputed with the last non-missing value. This approach assumes a constant trend of observations after drop-out from the study, i.e. the response level remains the same as the last response under the study drug.\nBaseline observation carried forward (BOCF): Handling of monotonic missing data. The missing visits are imputed with the baseline value. This approach assumes that subjects’ symptom severity or functioning (whichever was measured in the study) bounce back to the baseline state, prior to the intiation of the study drug.\n\n\n\nLet us run a complete case analysis on the all2 dataset.\nExercise: Fit an MMRM with response variable chgdrop, with baseline severity, treatment and visit as fixed effects, as well as baseline-by-visit and treatment-by-visit interaction, using an unstructured variance-covariance matrix on the all2 completers.\n\nHow do the results differ from the results obtained in the former chapter (response variable change, no missing data)?\nHow do the results differ from the results obtained at the beginning of this chapter (response variable chgdrop with missing data)?\nDiscuss the limitations of the complete case analysis. Which sources of bias can you identify?\n\nSolution:\n\n### Work with code chunks to find the solution to the exercises"
  },
  {
    "objectID": "s3_missingness.html#missing-data-mechanisms",
    "href": "s3_missingness.html#missing-data-mechanisms",
    "title": "Missing Data",
    "section": "",
    "text": "To understand the nature of missing data in our clinical trial, we consider the following taxonomy, introduced by (Roderick JA Little 2019). We differentiate between the following three types of missing data:\n\nMissing Completely at Random (MCAR): Conditional on all covariates in our analysis, the probability of missingness does not depend on either observed or unobserved values of the response variable.\nMissing at Random (MAR): Conditional on all covariates and observed response values in our analysis, the probability of missingness does not depend on the unobserved values of the response variable.\nMissing not at Random (MNAR): Conditional on all covariates and observed response values in our analysis, the probability of missingness does depend on the unobserved values of the response variable.\n\n(Mallinckrodt and Lipkovich 2016) give the following interpretation around the three types of missingness:\n“With MCAR, the outcome variable is not related to the probability of dropout (after taking into account covariates). In MAR, the observed values of the outcome variable are related to the probability of dropout, but the unobserved outcomes are not (after taking into account covariates and observed outcomes). In MNAR the unobserved outcomes are related to the probability of dropout even after the observed outcomes and covariates have been taken into account.”\nThe following two sections outline handling strategies for missing data. However, the best approach to handle missing data is to minimise its extent. While the occurence of missing data can rarely be avoided at all (think about the collection of questionnaire data in oncology studies and the missing data after subjects die), it is important to pursue an “as complete as can be” data collection.\nBaseline and screening data are of utmost importance in a pursuit of data completeness. If a screening value is missing, but was meant to be used as a covariate, this subjects’ whole data will be dropped from the analysis even if all responses were observed. If the baseline response variable was missing we are unable to compute a change from baseline, which also leads to the loss of this subjects’ data in the model (although LDA models are still able to provide an estimate) even if all post-baseline values were observed."
  },
  {
    "objectID": "s3_missingness.html#missing-data-handling-i-descriptive-stats-visualisations",
    "href": "s3_missingness.html#missing-data-handling-i-descriptive-stats-visualisations",
    "title": "Missing Data",
    "section": "",
    "text": "To gain an understanding of the impact of missingness on the average response trajectories, we can plot the mean changes from baseline by visit for each drop-out group. The three drop-out groups (variable dropout_grp) are:\n\nDrop-outs at Week 2: Subjects who completed baseline and Week 2, but discontinued from the study prior to Week 4.\nDrop-outs at Week 4: Subjects who completed baseline, Week 2 and Week 4, but discontinued from the study prior to Week 8.\nCompleters: Subjects who completed all visits in the study.\n\n\n\n\n\n\nExercise: Try to interpret the plot above and discuss the following topics around missingness:\n\nLook into the data. Which missing data pattern is present in this dataset?\nWhat can be seen in the plot? How does the drop-out time affect the observed mean response trajectories?\nWhat other aspects, apart from response, could influence a subjects’ likelihood to drop-out from the study?\nWhich other summaries/ visualizations can be useful to characterize and monitor the degree of missingness in clinical study data?\n\nSolution:\n\n### Work with code chunks to find the solution to the exercises"
  },
  {
    "objectID": "s3_missingness.html#missing-data-handling-ii-naive-analytic-approaches",
    "href": "s3_missingness.html#missing-data-handling-ii-naive-analytic-approaches",
    "title": "Missing Data",
    "section": "",
    "text": "This section provides an overview of simple and most of the times overly naive methods to deal with missing data. Although we will introduce more suitable methods in the next chapter, the approaches introduced in this section have gained questionable popularity in the past, which is why we introduce them here. The following methods to compute or completely ignore missing data exist:\n\nComplete Case Analysis: Discard all subjects with missing observations and only conduct the analysis on subjects with complete follow-up data.\nLast observation carried forward (LOCF): Handling of monotonic missing data. The missing visits are imputed with the last non-missing value. This approach assumes a constant trend of observations after drop-out from the study, i.e. the response level remains the same as the last response under the study drug.\nBaseline observation carried forward (BOCF): Handling of monotonic missing data. The missing visits are imputed with the baseline value. This approach assumes that subjects’ symptom severity or functioning (whichever was measured in the study) bounce back to the baseline state, prior to the intiation of the study drug.\n\n\n\nLet us run a complete case analysis on the all2 dataset.\nExercise: Fit an MMRM with response variable chgdrop, with baseline severity, treatment and visit as fixed effects, as well as baseline-by-visit and treatment-by-visit interaction, using an unstructured variance-covariance matrix on the all2 completers.\n\nHow do the results differ from the results obtained in the former chapter (response variable change, no missing data)?\nHow do the results differ from the results obtained at the beginning of this chapter (response variable chgdrop with missing data)?\nDiscuss the limitations of the complete case analysis. Which sources of bias can you identify?\n\nSolution:\n\n### Work with code chunks to find the solution to the exercises"
  },
  {
    "objectID": "s5_inferences_binary.html",
    "href": "s5_inferences_binary.html",
    "title": "Inferences from binary longitudinal data",
    "section": "",
    "text": "Inferences from binary longitudinal data\nIn the previous chapters we focused on modeling the means over time from a continuous response vector. In clinical trials we often encounter cases, where our response is however not continuous, but rather discrete. Discrete data can stem from either count data, such that values are taken in (a subset) of the natural numbers, or ordinal data, where values represent distinct categories, or binary data. In the latter case only values 0 and 1 are taken and represent the presence or absence of a clinical status, such as alive or dead at time X, hospitalized or not hospitalized at time X or response or non-response on a specific scale at time X.\nIn this case we use generalized linear models for the analysis of discrete longitudinal data."
  }
]